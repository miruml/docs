// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.1.0
 */

package openapi


import (
	"fmt"
)



type ContainerRepositoryType string

// List of ContainerRepositoryType
const (
	GAR ContainerRepositoryType = "gar"
	DOCKERHUB ContainerRepositoryType = "dockerhub"
)

// AllowedContainerRepositoryTypeEnumValues is all the allowed values of ContainerRepositoryType enum
var AllowedContainerRepositoryTypeEnumValues = []ContainerRepositoryType{
	"gar",
	"dockerhub",
}

// validContainerRepositoryTypeEnumValue provides a map of ContainerRepositoryTypes for fast verification of use input
var validContainerRepositoryTypeEnumValues = map[ContainerRepositoryType]struct{}{
	"gar": {},
	"dockerhub": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ContainerRepositoryType) IsValid() bool {
	_, ok := validContainerRepositoryTypeEnumValues[v]
	return ok
}

// NewContainerRepositoryTypeFromValue returns a pointer to a valid ContainerRepositoryType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewContainerRepositoryTypeFromValue(v string) (ContainerRepositoryType, error) {
	ev := ContainerRepositoryType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ContainerRepositoryType: valid values are %v", v, AllowedContainerRepositoryTypeEnumValues)
}



// AssertContainerRepositoryTypeRequired checks if the required fields are not zero-ed
func AssertContainerRepositoryTypeRequired(obj ContainerRepositoryType) error {
	return nil
}

// AssertContainerRepositoryTypeConstraints checks if the values respects the defined constraints
func AssertContainerRepositoryTypeConstraints(obj ContainerRepositoryType) error {
	return nil
}
