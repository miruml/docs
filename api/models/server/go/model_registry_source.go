// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.1.0
 */

package openapi


import (
	"time"
)



type RegistrySource struct {

	Id string `json:"id"`

	Object string `json:"object"`

	Name string `json:"name"`

	Repositories ContainerRepositoryListWithIsExtra `json:"repositories"`

	Aarch64 bool `json:"aarch64"`

	X8664 bool `json:"x86_64"`

	CreatedAt time.Time `json:"created_at"`

	UpdatedAt time.Time `json:"updated_at"`
}

// AssertRegistrySourceRequired checks if the required fields are not zero-ed
func AssertRegistrySourceRequired(obj RegistrySource) error {
	elements := map[string]interface{}{
		"id": obj.Id,
		"object": obj.Object,
		"name": obj.Name,
		"repositories": obj.Repositories,
		"aarch64": obj.Aarch64,
		"x86_64": obj.X8664,
		"created_at": obj.CreatedAt,
		"updated_at": obj.UpdatedAt,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertContainerRepositoryListWithIsExtraRequired(obj.Repositories); err != nil {
		return err
	}
	return nil
}

// AssertRegistrySourceConstraints checks if the values respects the defined constraints
func AssertRegistrySourceConstraints(obj RegistrySource) error {
	if err := AssertContainerRepositoryListWithIsExtraConstraints(obj.Repositories); err != nil {
		return err
	}
	return nil
}
