// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.1.0
 */

package openapi




type UpdateRegistrySource struct {

	Name string `json:"name"`

	ComposeFile string `json:"compose_file"`

	ExtraRepositories []string `json:"extra_repositories"`

	Aarch64 bool `json:"aarch64"`

	X8664 bool `json:"x86_64"`
}

// AssertUpdateRegistrySourceRequired checks if the required fields are not zero-ed
func AssertUpdateRegistrySourceRequired(obj UpdateRegistrySource) error {
	elements := map[string]interface{}{
		"name": obj.Name,
		"compose_file": obj.ComposeFile,
		"extra_repositories": obj.ExtraRepositories,
		"aarch64": obj.Aarch64,
		"x86_64": obj.X8664,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertUpdateRegistrySourceConstraints checks if the values respects the defined constraints
func AssertUpdateRegistrySourceConstraints(obj UpdateRegistrySource) error {
	return nil
}
