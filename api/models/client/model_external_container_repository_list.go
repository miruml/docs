/*
Miru API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ExternalContainerRepositoryList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalContainerRepositoryList{}

// ExternalContainerRepositoryList struct for ExternalContainerRepositoryList
type ExternalContainerRepositoryList struct {
	Object *string `json:"object,omitempty"`
	Data []ExternalContainerRepository `json:"data,omitempty"`
}

// NewExternalContainerRepositoryList instantiates a new ExternalContainerRepositoryList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalContainerRepositoryList() *ExternalContainerRepositoryList {
	this := ExternalContainerRepositoryList{}
	return &this
}

// NewExternalContainerRepositoryListWithDefaults instantiates a new ExternalContainerRepositoryList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalContainerRepositoryListWithDefaults() *ExternalContainerRepositoryList {
	this := ExternalContainerRepositoryList{}
	return &this
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *ExternalContainerRepositoryList) GetObject() string {
	if o == nil || IsNil(o.Object) {
		var ret string
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalContainerRepositoryList) GetObjectOk() (*string, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *ExternalContainerRepositoryList) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given string and assigns it to the Object field.
func (o *ExternalContainerRepositoryList) SetObject(v string) {
	o.Object = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ExternalContainerRepositoryList) GetData() []ExternalContainerRepository {
	if o == nil || IsNil(o.Data) {
		var ret []ExternalContainerRepository
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalContainerRepositoryList) GetDataOk() ([]ExternalContainerRepository, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ExternalContainerRepositoryList) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []ExternalContainerRepository and assigns it to the Data field.
func (o *ExternalContainerRepositoryList) SetData(v []ExternalContainerRepository) {
	o.Data = v
}

func (o ExternalContainerRepositoryList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalContainerRepositoryList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableExternalContainerRepositoryList struct {
	value *ExternalContainerRepositoryList
	isSet bool
}

func (v NullableExternalContainerRepositoryList) Get() *ExternalContainerRepositoryList {
	return v.value
}

func (v *NullableExternalContainerRepositoryList) Set(val *ExternalContainerRepositoryList) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalContainerRepositoryList) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalContainerRepositoryList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalContainerRepositoryList(val *ExternalContainerRepositoryList) *NullableExternalContainerRepositoryList {
	return &NullableExternalContainerRepositoryList{value: val, isSet: true}
}

func (v NullableExternalContainerRepositoryList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalContainerRepositoryList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


