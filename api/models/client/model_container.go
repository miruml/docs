/*
Miru API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the Container type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Container{}

// Container struct for Container
type Container struct {
	Object string `json:"object"`
	Id string `json:"id"`
	DeviceId string `json:"device_id"`
	ImageId NullableString `json:"image_id"`
	ImageTag NullableString `json:"image_tag"`
	ImageDigest NullableString `json:"image_digest"`
	DockerContainerId string `json:"docker_container_id"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
	StartedAt time.Time `json:"started_at"`
	FinishedAt NullableTime `json:"finished_at"`
	Status string `json:"status"`
	TargetStatus string `json:"target_status"`
	ExitCode int32 `json:"exit_code"`
	Error NullableString `json:"error"`
}

type _Container Container

// NewContainer instantiates a new Container object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainer(object string, id string, deviceId string, imageId NullableString, imageTag NullableString, imageDigest NullableString, dockerContainerId string, createdAt time.Time, updatedAt time.Time, startedAt time.Time, finishedAt NullableTime, status string, targetStatus string, exitCode int32, error_ NullableString) *Container {
	this := Container{}
	this.Object = object
	this.Id = id
	this.DeviceId = deviceId
	this.ImageId = imageId
	this.ImageTag = imageTag
	this.ImageDigest = imageDigest
	this.DockerContainerId = dockerContainerId
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.StartedAt = startedAt
	this.FinishedAt = finishedAt
	this.Status = status
	this.TargetStatus = targetStatus
	this.ExitCode = exitCode
	this.Error = error_
	return &this
}

// NewContainerWithDefaults instantiates a new Container object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerWithDefaults() *Container {
	this := Container{}
	return &this
}

// GetObject returns the Object field value
func (o *Container) GetObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Object
}

// GetObjectOk returns a tuple with the Object field value
// and a boolean to check if the value has been set.
func (o *Container) GetObjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Object, true
}

// SetObject sets field value
func (o *Container) SetObject(v string) {
	o.Object = v
}

// GetId returns the Id field value
func (o *Container) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Container) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Container) SetId(v string) {
	o.Id = v
}

// GetDeviceId returns the DeviceId field value
func (o *Container) GetDeviceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value
// and a boolean to check if the value has been set.
func (o *Container) GetDeviceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeviceId, true
}

// SetDeviceId sets field value
func (o *Container) SetDeviceId(v string) {
	o.DeviceId = v
}

// GetImageId returns the ImageId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Container) GetImageId() string {
	if o == nil || o.ImageId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ImageId.Get()
}

// GetImageIdOk returns a tuple with the ImageId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Container) GetImageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageId.Get(), o.ImageId.IsSet()
}

// SetImageId sets field value
func (o *Container) SetImageId(v string) {
	o.ImageId.Set(&v)
}

// GetImageTag returns the ImageTag field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Container) GetImageTag() string {
	if o == nil || o.ImageTag.Get() == nil {
		var ret string
		return ret
	}

	return *o.ImageTag.Get()
}

// GetImageTagOk returns a tuple with the ImageTag field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Container) GetImageTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageTag.Get(), o.ImageTag.IsSet()
}

// SetImageTag sets field value
func (o *Container) SetImageTag(v string) {
	o.ImageTag.Set(&v)
}

// GetImageDigest returns the ImageDigest field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Container) GetImageDigest() string {
	if o == nil || o.ImageDigest.Get() == nil {
		var ret string
		return ret
	}

	return *o.ImageDigest.Get()
}

// GetImageDigestOk returns a tuple with the ImageDigest field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Container) GetImageDigestOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageDigest.Get(), o.ImageDigest.IsSet()
}

// SetImageDigest sets field value
func (o *Container) SetImageDigest(v string) {
	o.ImageDigest.Set(&v)
}

// GetDockerContainerId returns the DockerContainerId field value
func (o *Container) GetDockerContainerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DockerContainerId
}

// GetDockerContainerIdOk returns a tuple with the DockerContainerId field value
// and a boolean to check if the value has been set.
func (o *Container) GetDockerContainerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DockerContainerId, true
}

// SetDockerContainerId sets field value
func (o *Container) SetDockerContainerId(v string) {
	o.DockerContainerId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Container) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Container) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Container) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Container) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Container) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Container) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetStartedAt returns the StartedAt field value
func (o *Container) GetStartedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value
// and a boolean to check if the value has been set.
func (o *Container) GetStartedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartedAt, true
}

// SetStartedAt sets field value
func (o *Container) SetStartedAt(v time.Time) {
	o.StartedAt = v
}

// GetFinishedAt returns the FinishedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Container) GetFinishedAt() time.Time {
	if o == nil || o.FinishedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.FinishedAt.Get()
}

// GetFinishedAtOk returns a tuple with the FinishedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Container) GetFinishedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.FinishedAt.Get(), o.FinishedAt.IsSet()
}

// SetFinishedAt sets field value
func (o *Container) SetFinishedAt(v time.Time) {
	o.FinishedAt.Set(&v)
}

// GetStatus returns the Status field value
func (o *Container) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *Container) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *Container) SetStatus(v string) {
	o.Status = v
}

// GetTargetStatus returns the TargetStatus field value
func (o *Container) GetTargetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetStatus
}

// GetTargetStatusOk returns a tuple with the TargetStatus field value
// and a boolean to check if the value has been set.
func (o *Container) GetTargetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetStatus, true
}

// SetTargetStatus sets field value
func (o *Container) SetTargetStatus(v string) {
	o.TargetStatus = v
}

// GetExitCode returns the ExitCode field value
func (o *Container) GetExitCode() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ExitCode
}

// GetExitCodeOk returns a tuple with the ExitCode field value
// and a boolean to check if the value has been set.
func (o *Container) GetExitCodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExitCode, true
}

// SetExitCode sets field value
func (o *Container) SetExitCode(v int32) {
	o.ExitCode = v
}

// GetError returns the Error field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Container) GetError() string {
	if o == nil || o.Error.Get() == nil {
		var ret string
		return ret
	}

	return *o.Error.Get()
}

// GetErrorOk returns a tuple with the Error field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Container) GetErrorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Error.Get(), o.Error.IsSet()
}

// SetError sets field value
func (o *Container) SetError(v string) {
	o.Error.Set(&v)
}

func (o Container) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Container) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["object"] = o.Object
	toSerialize["id"] = o.Id
	toSerialize["device_id"] = o.DeviceId
	toSerialize["image_id"] = o.ImageId.Get()
	toSerialize["image_tag"] = o.ImageTag.Get()
	toSerialize["image_digest"] = o.ImageDigest.Get()
	toSerialize["docker_container_id"] = o.DockerContainerId
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["started_at"] = o.StartedAt
	toSerialize["finished_at"] = o.FinishedAt.Get()
	toSerialize["status"] = o.Status
	toSerialize["target_status"] = o.TargetStatus
	toSerialize["exit_code"] = o.ExitCode
	toSerialize["error"] = o.Error.Get()
	return toSerialize, nil
}

func (o *Container) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"object",
		"id",
		"device_id",
		"image_id",
		"image_tag",
		"image_digest",
		"docker_container_id",
		"created_at",
		"updated_at",
		"started_at",
		"finished_at",
		"status",
		"target_status",
		"exit_code",
		"error",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varContainer := _Container{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varContainer)

	if err != nil {
		return err
	}

	*o = Container(varContainer)

	return err
}

type NullableContainer struct {
	value *Container
	isSet bool
}

func (v NullableContainer) Get() *Container {
	return v.value
}

func (v *NullableContainer) Set(val *Container) {
	v.value = val
	v.isSet = true
}

func (v NullableContainer) IsSet() bool {
	return v.isSet
}

func (v *NullableContainer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainer(val *Container) *NullableContainer {
	return &NullableContainer{value: val, isSet: true}
}

func (v NullableContainer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


