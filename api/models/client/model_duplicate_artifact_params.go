/*
Miru API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DuplicateArtifactParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DuplicateArtifactParams{}

// DuplicateArtifactParams struct for DuplicateArtifactParams
type DuplicateArtifactParams struct {
	DuplicateArtifacts []map[string]interface{} `json:"duplicate_artifacts"`
}

type _DuplicateArtifactParams DuplicateArtifactParams

// NewDuplicateArtifactParams instantiates a new DuplicateArtifactParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDuplicateArtifactParams(duplicateArtifacts []map[string]interface{}) *DuplicateArtifactParams {
	this := DuplicateArtifactParams{}
	this.DuplicateArtifacts = duplicateArtifacts
	return &this
}

// NewDuplicateArtifactParamsWithDefaults instantiates a new DuplicateArtifactParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDuplicateArtifactParamsWithDefaults() *DuplicateArtifactParams {
	this := DuplicateArtifactParams{}
	return &this
}

// GetDuplicateArtifacts returns the DuplicateArtifacts field value
func (o *DuplicateArtifactParams) GetDuplicateArtifacts() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.DuplicateArtifacts
}

// GetDuplicateArtifactsOk returns a tuple with the DuplicateArtifacts field value
// and a boolean to check if the value has been set.
func (o *DuplicateArtifactParams) GetDuplicateArtifactsOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.DuplicateArtifacts, true
}

// SetDuplicateArtifacts sets field value
func (o *DuplicateArtifactParams) SetDuplicateArtifacts(v []map[string]interface{}) {
	o.DuplicateArtifacts = v
}

func (o DuplicateArtifactParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DuplicateArtifactParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["duplicate_artifacts"] = o.DuplicateArtifacts
	return toSerialize, nil
}

func (o *DuplicateArtifactParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"duplicate_artifacts",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDuplicateArtifactParams := _DuplicateArtifactParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDuplicateArtifactParams)

	if err != nil {
		return err
	}

	*o = DuplicateArtifactParams(varDuplicateArtifactParams)

	return err
}

type NullableDuplicateArtifactParams struct {
	value *DuplicateArtifactParams
	isSet bool
}

func (v NullableDuplicateArtifactParams) Get() *DuplicateArtifactParams {
	return v.value
}

func (v *NullableDuplicateArtifactParams) Set(val *DuplicateArtifactParams) {
	v.value = val
	v.isSet = true
}

func (v NullableDuplicateArtifactParams) IsSet() bool {
	return v.isSet
}

func (v *NullableDuplicateArtifactParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDuplicateArtifactParams(val *DuplicateArtifactParams) *NullableDuplicateArtifactParams {
	return &NullableDuplicateArtifactParams{value: val, isSet: true}
}

func (v NullableDuplicateArtifactParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDuplicateArtifactParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


