/*
Miru API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ComposeFileImage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ComposeFileImage{}

// ComposeFileImage struct for ComposeFileImage
type ComposeFileImage struct {
	Object string `json:"object"`
	ComposeReference string `json:"compose_reference"`
	ImageUri string `json:"image_uri"`
	RepositoryUri string `json:"repository_uri"`
	RegistryUrl string `json:"registry_url"`
	RegistryType string `json:"registry_type"`
	Name string `json:"name"`
	Digest string `json:"digest"`
	Tag string `json:"tag"`
	IsImageValid bool `json:"is_image_valid"`
	IsRepositoryValid bool `json:"is_repository_valid"`
	Error string `json:"error"`
}

type _ComposeFileImage ComposeFileImage

// NewComposeFileImage instantiates a new ComposeFileImage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComposeFileImage(object string, composeReference string, imageUri string, repositoryUri string, registryUrl string, registryType string, name string, digest string, tag string, isImageValid bool, isRepositoryValid bool, error_ string) *ComposeFileImage {
	this := ComposeFileImage{}
	this.Object = object
	this.ComposeReference = composeReference
	this.ImageUri = imageUri
	this.RepositoryUri = repositoryUri
	this.RegistryUrl = registryUrl
	this.RegistryType = registryType
	this.Name = name
	this.Digest = digest
	this.Tag = tag
	this.IsImageValid = isImageValid
	this.IsRepositoryValid = isRepositoryValid
	this.Error = error_
	return &this
}

// NewComposeFileImageWithDefaults instantiates a new ComposeFileImage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComposeFileImageWithDefaults() *ComposeFileImage {
	this := ComposeFileImage{}
	return &this
}

// GetObject returns the Object field value
func (o *ComposeFileImage) GetObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Object
}

// GetObjectOk returns a tuple with the Object field value
// and a boolean to check if the value has been set.
func (o *ComposeFileImage) GetObjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Object, true
}

// SetObject sets field value
func (o *ComposeFileImage) SetObject(v string) {
	o.Object = v
}

// GetComposeReference returns the ComposeReference field value
func (o *ComposeFileImage) GetComposeReference() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ComposeReference
}

// GetComposeReferenceOk returns a tuple with the ComposeReference field value
// and a boolean to check if the value has been set.
func (o *ComposeFileImage) GetComposeReferenceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ComposeReference, true
}

// SetComposeReference sets field value
func (o *ComposeFileImage) SetComposeReference(v string) {
	o.ComposeReference = v
}

// GetImageUri returns the ImageUri field value
func (o *ComposeFileImage) GetImageUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageUri
}

// GetImageUriOk returns a tuple with the ImageUri field value
// and a boolean to check if the value has been set.
func (o *ComposeFileImage) GetImageUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageUri, true
}

// SetImageUri sets field value
func (o *ComposeFileImage) SetImageUri(v string) {
	o.ImageUri = v
}

// GetRepositoryUri returns the RepositoryUri field value
func (o *ComposeFileImage) GetRepositoryUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RepositoryUri
}

// GetRepositoryUriOk returns a tuple with the RepositoryUri field value
// and a boolean to check if the value has been set.
func (o *ComposeFileImage) GetRepositoryUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RepositoryUri, true
}

// SetRepositoryUri sets field value
func (o *ComposeFileImage) SetRepositoryUri(v string) {
	o.RepositoryUri = v
}

// GetRegistryUrl returns the RegistryUrl field value
func (o *ComposeFileImage) GetRegistryUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RegistryUrl
}

// GetRegistryUrlOk returns a tuple with the RegistryUrl field value
// and a boolean to check if the value has been set.
func (o *ComposeFileImage) GetRegistryUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RegistryUrl, true
}

// SetRegistryUrl sets field value
func (o *ComposeFileImage) SetRegistryUrl(v string) {
	o.RegistryUrl = v
}

// GetRegistryType returns the RegistryType field value
func (o *ComposeFileImage) GetRegistryType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RegistryType
}

// GetRegistryTypeOk returns a tuple with the RegistryType field value
// and a boolean to check if the value has been set.
func (o *ComposeFileImage) GetRegistryTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RegistryType, true
}

// SetRegistryType sets field value
func (o *ComposeFileImage) SetRegistryType(v string) {
	o.RegistryType = v
}

// GetName returns the Name field value
func (o *ComposeFileImage) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ComposeFileImage) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ComposeFileImage) SetName(v string) {
	o.Name = v
}

// GetDigest returns the Digest field value
func (o *ComposeFileImage) GetDigest() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Digest
}

// GetDigestOk returns a tuple with the Digest field value
// and a boolean to check if the value has been set.
func (o *ComposeFileImage) GetDigestOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Digest, true
}

// SetDigest sets field value
func (o *ComposeFileImage) SetDigest(v string) {
	o.Digest = v
}

// GetTag returns the Tag field value
func (o *ComposeFileImage) GetTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value
// and a boolean to check if the value has been set.
func (o *ComposeFileImage) GetTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tag, true
}

// SetTag sets field value
func (o *ComposeFileImage) SetTag(v string) {
	o.Tag = v
}

// GetIsImageValid returns the IsImageValid field value
func (o *ComposeFileImage) GetIsImageValid() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsImageValid
}

// GetIsImageValidOk returns a tuple with the IsImageValid field value
// and a boolean to check if the value has been set.
func (o *ComposeFileImage) GetIsImageValidOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsImageValid, true
}

// SetIsImageValid sets field value
func (o *ComposeFileImage) SetIsImageValid(v bool) {
	o.IsImageValid = v
}

// GetIsRepositoryValid returns the IsRepositoryValid field value
func (o *ComposeFileImage) GetIsRepositoryValid() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsRepositoryValid
}

// GetIsRepositoryValidOk returns a tuple with the IsRepositoryValid field value
// and a boolean to check if the value has been set.
func (o *ComposeFileImage) GetIsRepositoryValidOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsRepositoryValid, true
}

// SetIsRepositoryValid sets field value
func (o *ComposeFileImage) SetIsRepositoryValid(v bool) {
	o.IsRepositoryValid = v
}

// GetError returns the Error field value
func (o *ComposeFileImage) GetError() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Error
}

// GetErrorOk returns a tuple with the Error field value
// and a boolean to check if the value has been set.
func (o *ComposeFileImage) GetErrorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Error, true
}

// SetError sets field value
func (o *ComposeFileImage) SetError(v string) {
	o.Error = v
}

func (o ComposeFileImage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ComposeFileImage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["object"] = o.Object
	toSerialize["compose_reference"] = o.ComposeReference
	toSerialize["image_uri"] = o.ImageUri
	toSerialize["repository_uri"] = o.RepositoryUri
	toSerialize["registry_url"] = o.RegistryUrl
	toSerialize["registry_type"] = o.RegistryType
	toSerialize["name"] = o.Name
	toSerialize["digest"] = o.Digest
	toSerialize["tag"] = o.Tag
	toSerialize["is_image_valid"] = o.IsImageValid
	toSerialize["is_repository_valid"] = o.IsRepositoryValid
	toSerialize["error"] = o.Error
	return toSerialize, nil
}

func (o *ComposeFileImage) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"object",
		"compose_reference",
		"image_uri",
		"repository_uri",
		"registry_url",
		"registry_type",
		"name",
		"digest",
		"tag",
		"is_image_valid",
		"is_repository_valid",
		"error",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varComposeFileImage := _ComposeFileImage{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varComposeFileImage)

	if err != nil {
		return err
	}

	*o = ComposeFileImage(varComposeFileImage)

	return err
}

type NullableComposeFileImage struct {
	value *ComposeFileImage
	isSet bool
}

func (v NullableComposeFileImage) Get() *ComposeFileImage {
	return v.value
}

func (v *NullableComposeFileImage) Set(val *ComposeFileImage) {
	v.value = val
	v.isSet = true
}

func (v NullableComposeFileImage) IsSet() bool {
	return v.isSet
}

func (v *NullableComposeFileImage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComposeFileImage(val *ComposeFileImage) *NullableComposeFileImage {
	return &NullableComposeFileImage{value: val, isSet: true}
}

func (v NullableComposeFileImage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComposeFileImage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


