/*
Miru API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ForbiddenErrorParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ForbiddenErrorParams{}

// ForbiddenErrorParams struct for ForbiddenErrorParams
type ForbiddenErrorParams struct {
	IdentityId string `json:"identity_id"`
	IdentityType string `json:"identity_type"`
	Permission string `json:"permission"`
	ResourceId string `json:"resource_id"`
	ResourceType string `json:"resource_type"`
	Fix string `json:"fix"`
}

type _ForbiddenErrorParams ForbiddenErrorParams

// NewForbiddenErrorParams instantiates a new ForbiddenErrorParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewForbiddenErrorParams(identityId string, identityType string, permission string, resourceId string, resourceType string, fix string) *ForbiddenErrorParams {
	this := ForbiddenErrorParams{}
	this.IdentityId = identityId
	this.IdentityType = identityType
	this.Permission = permission
	this.ResourceId = resourceId
	this.ResourceType = resourceType
	this.Fix = fix
	return &this
}

// NewForbiddenErrorParamsWithDefaults instantiates a new ForbiddenErrorParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewForbiddenErrorParamsWithDefaults() *ForbiddenErrorParams {
	this := ForbiddenErrorParams{}
	return &this
}

// GetIdentityId returns the IdentityId field value
func (o *ForbiddenErrorParams) GetIdentityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdentityId
}

// GetIdentityIdOk returns a tuple with the IdentityId field value
// and a boolean to check if the value has been set.
func (o *ForbiddenErrorParams) GetIdentityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdentityId, true
}

// SetIdentityId sets field value
func (o *ForbiddenErrorParams) SetIdentityId(v string) {
	o.IdentityId = v
}

// GetIdentityType returns the IdentityType field value
func (o *ForbiddenErrorParams) GetIdentityType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdentityType
}

// GetIdentityTypeOk returns a tuple with the IdentityType field value
// and a boolean to check if the value has been set.
func (o *ForbiddenErrorParams) GetIdentityTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdentityType, true
}

// SetIdentityType sets field value
func (o *ForbiddenErrorParams) SetIdentityType(v string) {
	o.IdentityType = v
}

// GetPermission returns the Permission field value
func (o *ForbiddenErrorParams) GetPermission() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Permission
}

// GetPermissionOk returns a tuple with the Permission field value
// and a boolean to check if the value has been set.
func (o *ForbiddenErrorParams) GetPermissionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Permission, true
}

// SetPermission sets field value
func (o *ForbiddenErrorParams) SetPermission(v string) {
	o.Permission = v
}

// GetResourceId returns the ResourceId field value
func (o *ForbiddenErrorParams) GetResourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value
// and a boolean to check if the value has been set.
func (o *ForbiddenErrorParams) GetResourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceId, true
}

// SetResourceId sets field value
func (o *ForbiddenErrorParams) SetResourceId(v string) {
	o.ResourceId = v
}

// GetResourceType returns the ResourceType field value
func (o *ForbiddenErrorParams) GetResourceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value
// and a boolean to check if the value has been set.
func (o *ForbiddenErrorParams) GetResourceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceType, true
}

// SetResourceType sets field value
func (o *ForbiddenErrorParams) SetResourceType(v string) {
	o.ResourceType = v
}

// GetFix returns the Fix field value
func (o *ForbiddenErrorParams) GetFix() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Fix
}

// GetFixOk returns a tuple with the Fix field value
// and a boolean to check if the value has been set.
func (o *ForbiddenErrorParams) GetFixOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Fix, true
}

// SetFix sets field value
func (o *ForbiddenErrorParams) SetFix(v string) {
	o.Fix = v
}

func (o ForbiddenErrorParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ForbiddenErrorParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["identity_id"] = o.IdentityId
	toSerialize["identity_type"] = o.IdentityType
	toSerialize["permission"] = o.Permission
	toSerialize["resource_id"] = o.ResourceId
	toSerialize["resource_type"] = o.ResourceType
	toSerialize["fix"] = o.Fix
	return toSerialize, nil
}

func (o *ForbiddenErrorParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"identity_id",
		"identity_type",
		"permission",
		"resource_id",
		"resource_type",
		"fix",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varForbiddenErrorParams := _ForbiddenErrorParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varForbiddenErrorParams)

	if err != nil {
		return err
	}

	*o = ForbiddenErrorParams(varForbiddenErrorParams)

	return err
}

type NullableForbiddenErrorParams struct {
	value *ForbiddenErrorParams
	isSet bool
}

func (v NullableForbiddenErrorParams) Get() *ForbiddenErrorParams {
	return v.value
}

func (v *NullableForbiddenErrorParams) Set(val *ForbiddenErrorParams) {
	v.value = val
	v.isSet = true
}

func (v NullableForbiddenErrorParams) IsSet() bool {
	return v.isSet
}

func (v *NullableForbiddenErrorParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableForbiddenErrorParams(val *ForbiddenErrorParams) *NullableForbiddenErrorParams {
	return &NullableForbiddenErrorParams{value: val, isSet: true}
}

func (v NullableForbiddenErrorParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableForbiddenErrorParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


