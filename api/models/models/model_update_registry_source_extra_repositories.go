/*
Miru API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateRegistrySourceExtraRepositories type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateRegistrySourceExtraRepositories{}

// UpdateRegistrySourceExtraRepositories struct for UpdateRegistrySourceExtraRepositories
type UpdateRegistrySourceExtraRepositories struct {
	Data []string `json:"data,omitempty"`
}

// NewUpdateRegistrySourceExtraRepositories instantiates a new UpdateRegistrySourceExtraRepositories object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateRegistrySourceExtraRepositories() *UpdateRegistrySourceExtraRepositories {
	this := UpdateRegistrySourceExtraRepositories{}
	return &this
}

// NewUpdateRegistrySourceExtraRepositoriesWithDefaults instantiates a new UpdateRegistrySourceExtraRepositories object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateRegistrySourceExtraRepositoriesWithDefaults() *UpdateRegistrySourceExtraRepositories {
	this := UpdateRegistrySourceExtraRepositories{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *UpdateRegistrySourceExtraRepositories) GetData() []string {
	if o == nil || IsNil(o.Data) {
		var ret []string
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRegistrySourceExtraRepositories) GetDataOk() ([]string, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *UpdateRegistrySourceExtraRepositories) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []string and assigns it to the Data field.
func (o *UpdateRegistrySourceExtraRepositories) SetData(v []string) {
	o.Data = v
}

func (o UpdateRegistrySourceExtraRepositories) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateRegistrySourceExtraRepositories) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableUpdateRegistrySourceExtraRepositories struct {
	value *UpdateRegistrySourceExtraRepositories
	isSet bool
}

func (v NullableUpdateRegistrySourceExtraRepositories) Get() *UpdateRegistrySourceExtraRepositories {
	return v.value
}

func (v *NullableUpdateRegistrySourceExtraRepositories) Set(val *UpdateRegistrySourceExtraRepositories) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateRegistrySourceExtraRepositories) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateRegistrySourceExtraRepositories) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateRegistrySourceExtraRepositories(val *UpdateRegistrySourceExtraRepositories) *NullableUpdateRegistrySourceExtraRepositories {
	return &NullableUpdateRegistrySourceExtraRepositories{value: val, isSet: true}
}

func (v NullableUpdateRegistrySourceExtraRepositories) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateRegistrySourceExtraRepositories) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


