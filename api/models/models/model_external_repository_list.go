/*
Miru API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ExternalRepositoryList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalRepositoryList{}

// ExternalRepositoryList struct for ExternalRepositoryList
type ExternalRepositoryList struct {
	Object *string `json:"object,omitempty"`
	Data []ExternalRepository `json:"data,omitempty"`
}

// NewExternalRepositoryList instantiates a new ExternalRepositoryList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalRepositoryList() *ExternalRepositoryList {
	this := ExternalRepositoryList{}
	return &this
}

// NewExternalRepositoryListWithDefaults instantiates a new ExternalRepositoryList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalRepositoryListWithDefaults() *ExternalRepositoryList {
	this := ExternalRepositoryList{}
	return &this
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *ExternalRepositoryList) GetObject() string {
	if o == nil || IsNil(o.Object) {
		var ret string
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalRepositoryList) GetObjectOk() (*string, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *ExternalRepositoryList) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given string and assigns it to the Object field.
func (o *ExternalRepositoryList) SetObject(v string) {
	o.Object = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ExternalRepositoryList) GetData() []ExternalRepository {
	if o == nil || IsNil(o.Data) {
		var ret []ExternalRepository
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalRepositoryList) GetDataOk() ([]ExternalRepository, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ExternalRepositoryList) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []ExternalRepository and assigns it to the Data field.
func (o *ExternalRepositoryList) SetData(v []ExternalRepository) {
	o.Data = v
}

func (o ExternalRepositoryList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalRepositoryList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableExternalRepositoryList struct {
	value *ExternalRepositoryList
	isSet bool
}

func (v NullableExternalRepositoryList) Get() *ExternalRepositoryList {
	return v.value
}

func (v *NullableExternalRepositoryList) Set(val *ExternalRepositoryList) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalRepositoryList) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalRepositoryList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalRepositoryList(val *ExternalRepositoryList) *NullableExternalRepositoryList {
	return &NullableExternalRepositoryList{value: val, isSet: true}
}

func (v NullableExternalRepositoryList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalRepositoryList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


