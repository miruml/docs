/*
Miru API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateRegistrySourceArtifact type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateRegistrySourceArtifact{}

// CreateRegistrySourceArtifact struct for CreateRegistrySourceArtifact
type CreateRegistrySourceArtifact struct {
	Images []CreateRegistrySourceArtifactImagesInner `json:"images"`
}

type _CreateRegistrySourceArtifact CreateRegistrySourceArtifact

// NewCreateRegistrySourceArtifact instantiates a new CreateRegistrySourceArtifact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRegistrySourceArtifact(images []CreateRegistrySourceArtifactImagesInner) *CreateRegistrySourceArtifact {
	this := CreateRegistrySourceArtifact{}
	this.Images = images
	return &this
}

// NewCreateRegistrySourceArtifactWithDefaults instantiates a new CreateRegistrySourceArtifact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRegistrySourceArtifactWithDefaults() *CreateRegistrySourceArtifact {
	this := CreateRegistrySourceArtifact{}
	return &this
}

// GetImages returns the Images field value
func (o *CreateRegistrySourceArtifact) GetImages() []CreateRegistrySourceArtifactImagesInner {
	if o == nil {
		var ret []CreateRegistrySourceArtifactImagesInner
		return ret
	}

	return o.Images
}

// GetImagesOk returns a tuple with the Images field value
// and a boolean to check if the value has been set.
func (o *CreateRegistrySourceArtifact) GetImagesOk() ([]CreateRegistrySourceArtifactImagesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Images, true
}

// SetImages sets field value
func (o *CreateRegistrySourceArtifact) SetImages(v []CreateRegistrySourceArtifactImagesInner) {
	o.Images = v
}

func (o CreateRegistrySourceArtifact) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateRegistrySourceArtifact) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["images"] = o.Images
	return toSerialize, nil
}

func (o *CreateRegistrySourceArtifact) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"images",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateRegistrySourceArtifact := _CreateRegistrySourceArtifact{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateRegistrySourceArtifact)

	if err != nil {
		return err
	}

	*o = CreateRegistrySourceArtifact(varCreateRegistrySourceArtifact)

	return err
}

type NullableCreateRegistrySourceArtifact struct {
	value *CreateRegistrySourceArtifact
	isSet bool
}

func (v NullableCreateRegistrySourceArtifact) Get() *CreateRegistrySourceArtifact {
	return v.value
}

func (v *NullableCreateRegistrySourceArtifact) Set(val *CreateRegistrySourceArtifact) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRegistrySourceArtifact) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRegistrySourceArtifact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRegistrySourceArtifact(val *CreateRegistrySourceArtifact) *NullableCreateRegistrySourceArtifact {
	return &NullableCreateRegistrySourceArtifact{value: val, isSet: true}
}

func (v NullableCreateRegistrySourceArtifact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRegistrySourceArtifact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


