/*
Miru API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ExternalRepository type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalRepository{}

// ExternalRepository struct for ExternalRepository
type ExternalRepository struct {
	Object *string `json:"object,omitempty"`
	RegistryUrl string `json:"registry_url"`
	Name string `json:"name"`
	Uri string `json:"uri"`
}

type _ExternalRepository ExternalRepository

// NewExternalRepository instantiates a new ExternalRepository object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalRepository(registryUrl string, name string, uri string) *ExternalRepository {
	this := ExternalRepository{}
	this.RegistryUrl = registryUrl
	this.Name = name
	this.Uri = uri
	return &this
}

// NewExternalRepositoryWithDefaults instantiates a new ExternalRepository object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalRepositoryWithDefaults() *ExternalRepository {
	this := ExternalRepository{}
	return &this
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *ExternalRepository) GetObject() string {
	if o == nil || IsNil(o.Object) {
		var ret string
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalRepository) GetObjectOk() (*string, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *ExternalRepository) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given string and assigns it to the Object field.
func (o *ExternalRepository) SetObject(v string) {
	o.Object = &v
}

// GetRegistryUrl returns the RegistryUrl field value
func (o *ExternalRepository) GetRegistryUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RegistryUrl
}

// GetRegistryUrlOk returns a tuple with the RegistryUrl field value
// and a boolean to check if the value has been set.
func (o *ExternalRepository) GetRegistryUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RegistryUrl, true
}

// SetRegistryUrl sets field value
func (o *ExternalRepository) SetRegistryUrl(v string) {
	o.RegistryUrl = v
}

// GetName returns the Name field value
func (o *ExternalRepository) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ExternalRepository) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ExternalRepository) SetName(v string) {
	o.Name = v
}

// GetUri returns the Uri field value
func (o *ExternalRepository) GetUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uri
}

// GetUriOk returns a tuple with the Uri field value
// and a boolean to check if the value has been set.
func (o *ExternalRepository) GetUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uri, true
}

// SetUri sets field value
func (o *ExternalRepository) SetUri(v string) {
	o.Uri = v
}

func (o ExternalRepository) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalRepository) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	toSerialize["registry_url"] = o.RegistryUrl
	toSerialize["name"] = o.Name
	toSerialize["uri"] = o.Uri
	return toSerialize, nil
}

func (o *ExternalRepository) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"registry_url",
		"name",
		"uri",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExternalRepository := _ExternalRepository{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExternalRepository)

	if err != nil {
		return err
	}

	*o = ExternalRepository(varExternalRepository)

	return err
}

type NullableExternalRepository struct {
	value *ExternalRepository
	isSet bool
}

func (v NullableExternalRepository) Get() *ExternalRepository {
	return v.value
}

func (v *NullableExternalRepository) Set(val *ExternalRepository) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalRepository) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalRepository) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalRepository(val *ExternalRepository) *NullableExternalRepository {
	return &NullableExternalRepository{value: val, isSet: true}
}

func (v NullableExternalRepository) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalRepository) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


