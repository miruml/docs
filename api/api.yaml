openapi: 3.0.3
info:
  title: Miru API
  version: 0.1.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: https://configs.api.miruml.com/{version}
    description: Miru API
    variables:
      version:
        default: v1
security:
  - ApiKeyAuth: []
paths:
  /config_instances/{config_instance_id}:
    get:
      tags:
        - Config Instances
      summary: Get
      operationId: getConfigInstance
      parameters:
        - $ref: '#/components/parameters/config_instance_id'
        - $ref: '#/components/parameters/expand'
      responses:
        '200':
          description: Successfully retrieved the config instance.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigInstance'
  /config_instances:
    get:
      tags:
        - Config Instances
      summary: List
      operationId: listConfigInstances
      parameters:
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/order_by'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/target_status'
        - $ref: '#/components/parameters/activity_status'
        - $ref: '#/components/parameters/error_status'
        - $ref: '#/components/parameters/device_id'
        - $ref: '#/components/parameters/config_schema_id'
        - $ref: '#/components/parameters/config_type_id'
      responses:
        '200':
          description: Successfully listed the config instances.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigInstanceList'
  /config_instances/{config_instance_id}/approve:
    post:
      tags:
        - Config Instances
      summary: Approve
      operationId: approveConfigInstance
      parameters:
        - $ref: '#/components/parameters/config_instance_id'
        - $ref: '#/components/parameters/expand'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApproveConfigInstanceRequest'
      responses:
        '200':
          description: Successfully approved the config instance for deployment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigInstance'
  /config_instances/{config_instance_id}/reject:
    post:
      tags:
        - Config Instances
      summary: Reject
      operationId: rejectConfigInstance
      parameters:
        - $ref: '#/components/parameters/config_instance_id'
        - $ref: '#/components/parameters/expand'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectConfigInstanceRequest'
      responses:
        '200':
          description: Successfully rejected the config instance for deployment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigInstance'
  /config_instances/{config_instance_id}/deploy:
    post:
      tags:
        - Config Instances
      summary: Deploy
      operationId: deployConfigInstance
      parameters:
        - $ref: '#/components/parameters/config_instance_id'
        - $ref: '#/components/parameters/dry_run'
      responses:
        '200':
          description: Successfully queued the config instance for deployment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployConfigInstanceResponse'
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  parameters:
    config_instance_id:
      name: config_instance_id
      in: path
      required: true
      description: The unique identifier of the config instance
      schema:
        type: string
        example: cfg_inst_123
    expand:
      name: expand[]
      in: query
      required: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/ConfigInstanceExpand'
        description: The fields to expand in the config instance
    offset:
      name: offset
      in: query
      required: false
      description: The offset to begin returning results from
      schema:
        type: integer
        default: 0
        minimum: 0
        example: 0
    limit:
      name: limit
      in: query
      required: false
      description: The number of items to return
      schema:
        type: integer
        default: 10
        minimum: 1
        maximum: 100
        example: 10
    order_by:
      name: order_by
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/ConfigInstanceOrderBy'
        description: The order to sort the config instances
    id:
      name: id
      in: query
      required: false
      description: The config instance ID to filter by
      schema:
        type: string
        example: cfg_inst_123
    target_status:
      name: target status
      in: query
      required: false
      description: The config instance target status to filter by
      schema:
        $ref: '#/components/schemas/ConfigInstanceTargetStatus'
    activity_status:
      name: activity status
      in: query
      required: false
      description: The config instance activity status to filter by
      schema:
        $ref: '#/components/schemas/ConfigInstanceActivityStatus'
    error_status:
      name: error status
      in: query
      required: false
      description: The config instance error status to filter by
      schema:
        $ref: '#/components/schemas/ConfigInstanceErrorStatus'
    device_id:
      name: device id
      in: query
      required: false
      description: The device ID to filter by
      schema:
        type: string
        example: dvc_123
    config_schema_id:
      name: config schema id
      in: query
      required: false
      description: The config schema ID to filter by
      schema:
        type: string
        example: cfg_sch_123
    config_type_id:
      name: config type id
      in: query
      required: false
      description: The config type ID to filter by
      schema:
        type: string
        example: cfg_typ_123
    dry_run:
      name: dry_run
      in: query
      required: false
      description: Whether to perform a dry run or not. A dry run will return the response as if the changes were applied but no changes are made.
      schema:
        type: boolean
        default: false
  schemas:
    ConfigInstanceExpand:
      type: string
      enum:
        - content
        - config_schema
        - device
        - config_type
      x-enum-varnames:
        - CONFIG_INSTANCE_EXPAND_CONTENT
        - CONFIG_INSTANCE_EXPAND_CONFIG_SCHEMA
        - CONFIG_INSTANCE_EXPAND_DEVICE
        - CONFIG_INSTANCE_EXPAND_CONFIG_TYPE
    ConfigInstanceTargetStatus:
      type: string
      description: Desired state of the config instance
      enum:
        - created
        - validated
        - deployed
        - removed
      x-enum-varnames:
        - CONFIG_INSTANCE_TARGET_STATUS_CREATED
        - CONFIG_INSTANCE_TARGET_STATUS_VALIDATED
        - CONFIG_INSTANCE_TARGET_STATUS_DEPLOYED
        - CONFIG_INSTANCE_TARGET_STATUS_REMOVED
    ConfigInstanceStatus:
      type: string
      description: The merging of the 'activity_status' and 'error_status' where 'error_status' takes precedence over 'activity_status' if errors are present
      enum:
        - created
        - validating
        - validated
        - queued
        - deployed
        - removed
        - failed
        - retrying
      x-enum-varnames:
        - CONFIG_INSTANCE_STATUS_CREATED
        - CONFIG_INSTANCE_STATUS_VALIDATING
        - CONFIG_INSTANCE_STATUS_VALIDATED
        - CONFIG_INSTANCE_STATUS_QUEUED
        - CONFIG_INSTANCE_STATUS_DEPLOYED
        - CONFIG_INSTANCE_STATUS_REMOVED
        - CONFIG_INSTANCE_STATUS_FAILED
        - CONFIG_INSTANCE_STATUS_RETRYING
    ConfigInstanceActivityStatus:
      type: string
      description: Last known activity state of the config instance
      enum:
        - created
        - validating
        - validated
        - queued
        - deployed
        - removed
      x-enum-varnames:
        - CONFIG_INSTANCE_ACTIVITY_STATUS_CREATED
        - CONFIG_INSTANCE_ACTIVITY_STATUS_VALIDATING
        - CONFIG_INSTANCE_ACTIVITY_STATUS_VALIDATED
        - CONFIG_INSTANCE_ACTIVITY_STATUS_QUEUED
        - CONFIG_INSTANCE_ACTIVITY_STATUS_DEPLOYED
        - CONFIG_INSTANCE_ACTIVITY_STATUS_REMOVED
    ConfigInstanceErrorStatus:
      type: string
      description: Last known error state of the config instance
      enum:
        - none
        - failed
        - retrying
      x-enum-varnames:
        - CONFIG_INSTANCE_ERROR_STATUS_NONE
        - CONFIG_INSTANCE_ERROR_STATUS_FAILED
        - CONFIG_INSTANCE_ERROR_STATUS_RETRYING
    BaseConfigInstance:
      title: Base Config Instance
      type: object
      required:
        - object
        - id
        - target_status
        - status
        - activity_status
        - error_status
        - relative_filepath
        - created_at
        - updated_at
        - device_id
        - config_schema_id
        - config_type_id
      properties:
        object:
          type: string
          enum:
            - config_instance
          example: config_instance
        id:
          type: string
          example: cfg_inst_123
          description: ID of the config instance
        target_status:
          $ref: '#/components/schemas/ConfigInstanceTargetStatus'
        status:
          $ref: '#/components/schemas/ConfigInstanceStatus'
        activity_status:
          $ref: '#/components/schemas/ConfigInstanceActivityStatus'
        error_status:
          $ref: '#/components/schemas/ConfigInstanceErrorStatus'
        relative_filepath:
          type: string
          example: /v1/motion-control.json
          description: The file path to deploy the config instance relative to /srv/miru/config_instances. v1/motion-control.json would deploy to /srv/miru/config_instances/v1/motion-control.json
        created_at:
          type: string
          format: date-time
          example: '2021-01-01T00:00:00Z'
          description: The timestamp when the config instance was created
        updated_at:
          type: string
          format: date-time
          example: '2021-01-01T00:00:00Z'
          description: The timestamp when the config instance was last updated
        device_id:
          type: string
          example: dvc_123
          description: The ID of the device which the config instance is associated with
        config_schema_id:
          type: string
          example: cfg_sch_123
          description: The ID of the config schema which the config instance must adhere to
        config_type_id:
          type: string
          example: cfg_type_123
          description: The ID of the config type which the config instance is a part of
    DeviceStatus:
      type: string
      description: The status of the device
      enum:
        - inactive
        - activated
        - provisioned
      x-enum-varnames:
        - DEVICE_STATUS_INACTIVE
        - DEVICE_STATUS_ACTIVATED
        - DEVICE_STATUS_PROVISIONED
    BaseDevice:
      title: Base Device
      type: object
      required:
        - object
        - id
        - name
        - status
        - created_at
        - updated_at
      properties:
        object:
          type: string
          enum:
            - device
          example: device
        id:
          type: string
          example: dvc_123
          description: ID of the device
        name:
          type: string
          example: My Device
          description: Name of the device
        status:
          $ref: '#/components/schemas/DeviceStatus'
        created_at:
          type: string
          format: date-time
          example: '2021-01-01T00:00:00Z'
          description: Timestamp of when the device was created
        updated_at:
          type: string
          format: date-time
          example: '2021-01-01T00:00:00Z'
          description: Timestamp of when the device was last updated
    BaseConfigSchema:
      title: Base Config Schema
      type: object
      required:
        - object
        - id
        - version
        - digest
        - relative_filepath
        - created_at
        - updated_at
        - config_type_id
        - content
      properties:
        object:
          type: string
          enum:
            - config_schema
          example: config_schema
        id:
          type: string
          example: cfg_sch_123
          description: ID of the config schema
        version:
          type: integer
          example: 2
          description: Version of the config schema
        digest:
          type: string
          example: '1234567890'
          description: Digest of the config schema
        relative_filepath:
          type: string
          description: The default file path to deploy the config instances of this config schema relative to /srv/miru/config_instances. v1/motion-control.json would deploy to /srv/miru/config_instances/v1/motion-control.json
          example: /v1/motion-control.json
        created_at:
          type: string
          format: date-time
          example: '2021-01-01T00:00:00Z'
          description: Timestamp of when the config schema was created
        updated_at:
          type: string
          format: date-time
          example: '2021-01-01T00:00:00Z'
          description: Timestamp of when the config schema was last updated
        config_type_id:
          type: string
          example: cfg_typ_123
          description: ID of the config type
        content:
          type: object
          description: JSON schema contents
          example:
            title: Robot Features
            type: object
            properties:
              enable_autonomy:
                type: boolean
                default: true
              enable_remote_control:
                type: boolean
                default: true
              max_payload_kg:
                type: number
                minimum: 0
                maximum: 99
                default: 10
              preferred_speed_mode:
                type: string
                enum:
                  - slow
                  - normal
                  - fast
                default: normal
              emergency_stop_sensitivity:
                type: number
                minimum: 0
                maximum: 1
                default: 0.8
              telemetry:
                type: object
                properties:
                  upload_interval_sec:
                    type: integer
                    minimum: 10
                    maximum: 600
                    default: 60
                  heartbeat_interval_sec:
                    type: integer
                    minimum: 1
                    maximum: 60
                    default: 10
                required:
                  - upload_interval_sec
                  - heartbeat_interval_sec
            required:
              - enable_autonomy
              - enable_remote_control
              - max_payload_kg
              - preferred_speed_mode
              - emergency_stop_sensitivity
              - telemetry
          nullable: true
    BaseConfigType:
      title: Config Type
      type: object
      required:
        - object
        - id
        - name
        - slug
        - created_at
        - updated_at
      properties:
        object:
          type: string
          enum:
            - config_type
          example: config_type
        id:
          type: string
          example: cfg_123
          description: ID of the config type
        name:
          type: string
          example: My Config Type
          description: Name of the config type
        slug:
          type: string
          example: my-config-type
          description: Slug of the config type
        created_at:
          type: string
          format: date-time
          example: '2021-01-01T00:00:00Z'
          description: Timestamp of when the config type was created
        updated_at:
          type: string
          format: date-time
          example: '2021-01-01T00:00:00Z'
          description: Timestamp of when the config type was last updated
    PaginatedList:
      title: Paginated List
      type: object
      required:
        - object
        - total_count
        - limit
        - offset
        - has_more
      properties:
        object:
          type: string
          enum:
            - list
          example: list
        total_count:
          type: integer
          format: int
          description: The total number of items in the list. By default the total count is not returned. The total count must be expanded to get the total number of items in the list.
          example: 15
        limit:
          type: integer
          description: The number of items to return
          example: 10
          default: 10
          minimum: 1
          maximum: 100
        offset:
          type: integer
          default: 0
          minimum: 0
          example: 0
        has_more:
          type: boolean
          description: True if there are more items in the list to return. False if there are no more items to return.
          example: false
    ConfigSchema:
      allOf:
        - $ref: '#/components/schemas/BaseConfigSchema'
        - type: object
          required:
            - config_type
          properties:
            config_type:
              allOf:
                - $ref: '#/components/schemas/ConfigType'
              nullable: true
              description: Expand the config type using 'expand[]=config_type' in the query string
              example: null
    ConfigSchemaList:
      title: Config Schema List
      allOf:
        - $ref: '#/components/schemas/PaginatedList'
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/ConfigSchema'
    ConfigType:
      allOf:
        - $ref: '#/components/schemas/BaseConfigType'
        - type: object
          required:
            - config_schemas
          properties:
            config_schemas:
              allOf:
                - $ref: '#/components/schemas/ConfigSchemaList'
              nullable: true
              description: Expand the config schemas using 'expand[]=schemas' in the query string
              example:
                object: list
                total_count: -1
                limit: -1
                offset: -1
                has_more: false
                data: []
    ConfigInstance:
      allOf:
        - $ref: '#/components/schemas/BaseConfigInstance'
        - type: object
          required:
            - device
            - config_schema
            - config_type
            - content
          properties:
            device:
              allOf:
                - $ref: '#/components/schemas/BaseDevice'
              nullable: true
              example: null
            config_schema:
              allOf:
                - $ref: '#/components/schemas/ConfigSchema'
              nullable: true
              description: Expand the config schema using 'expand[]=config_schema' in the query string
              example: null
            config_type:
              allOf:
                - $ref: '#/components/schemas/ConfigType'
              nullable: true
              description: Expand the config type using 'expand[]=config_type' in the query string
              example: null
            content:
              type: object
              description: The configuration values associated with the config instance
              example:
                enable_autonomy: true
                enable_remote_control: false
                max_payload_kg: 8.5
                preferred_speed_mode: normal
                emergency_stop_sensitivity: 0.9
                telemetry:
                  upload_interval_sec: 45
                  heartbeat_interval_sec: 15
              nullable: true
    ConfigInstanceOrderBy:
      type: string
      enum:
        - created_at:desc
        - created_at:asc
      x-enum-varnames:
        - CONFIG_INSTANCE_ORDER_BY_CREATED_AT_DESC
        - CONFIG_INSTANCE_ORDER_BY_CREATED_AT_ASC
    ConfigInstanceList:
      title: Config Instance List
      type: object
      allOf:
        - $ref: '#/components/schemas/PaginatedList'
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/ConfigInstance'
    ApproveConfigInstanceRequest:
      title: Approve Config Instance Request
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: A high level success message displayed to the user
          example: The config instance has been approved
    RejectConfigInstanceRequest:
      title: Reject Config Instance Request
      type: object
      required:
        - message
        - errors
      properties:
        message:
          type: string
          description: A high level error message displayed to the user
          example: The config instance contains additional parameters that are not supported by the config schema
        errors:
          type: array
          items:
            type: object
            required:
              - parameter_path
              - message
            properties:
              parameter_path:
                type: array
                items:
                  type: string
                  description: The path to the parameter that is causing the error
                  example:
                    - motion_detection
                    - sensitivity
              message:
                type: string
                description: A detailed message explaining why the parameter is causing the error
                example: Motion detection sensitivity must be between 0 and 100
    ConfigInstanceRemovalCode:
      title: Config Instance Removal Code
      type: string
      enum:
        - device_file_path_conflict
        - device_config_schema_conflict
      example: device_file_path_conflict
    RemoveConfigInstanceResponse:
      title: Remove Config Instance Response
      type: object
      required:
        - code
        - explanation
        - config_instance
      properties:
        code:
          $ref: '#/components/schemas/ConfigInstanceRemovalCode'
        explanation:
          type: string
          example: Config instance cfg_inst_123 has the same device and file path as cfg_inst_456
        config_instance:
          $ref: '#/components/schemas/ConfigInstance'
    DeployConfigInstanceResponse:
      title: Deploy Config Instance Response
      type: object
      required:
        - deploy
        - remove
      properties:
        deploy:
          $ref: '#/components/schemas/ConfigInstance'
        remove:
          type: array
          items:
            $ref: '#/components/schemas/RemoveConfigInstanceResponse'
