// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.1.0
 */

package openapi

import (
	"context"
	"net/http"
)



// ArtifactsAPIRouter defines the required methods for binding the api requests to a responses for the ArtifactsAPI
// The ArtifactsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ArtifactsAPIServicer to perform the required actions, then write the service results to the http response.
type ArtifactsAPIRouter interface { 
	ArtifactsArtifactIdGet(http.ResponseWriter, *http.Request)
	ArtifactsArtifactIdComposeFileGet(http.ResponseWriter, *http.Request)
	SourcesRegistriesRegistrySourceIdArtifactsPost(http.ResponseWriter, *http.Request)
	SourcesGithubGithubSourceIdArtifactsPost(http.ResponseWriter, *http.Request)
}
// RegistrySourcesAPIRouter defines the required methods for binding the api requests to a responses for the RegistrySourcesAPI
// The RegistrySourcesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a RegistrySourcesAPIServicer to perform the required actions, then write the service results to the http response.
type RegistrySourcesAPIRouter interface { 
	WorkspacesWorkspaceIdSourcesRegistriesGet(http.ResponseWriter, *http.Request)
	WorkspacesWorkspaceIdSourcesRegistriesPost(http.ResponseWriter, *http.Request)
	SourcesRegistriesRegistrySourceIdGet(http.ResponseWriter, *http.Request)
	SourcesRegistriesRegistrySourceIdPatch(http.ResponseWriter, *http.Request)
	SourcesRegistriesRegistrySourceIdComposeFileGet(http.ResponseWriter, *http.Request)
}
// RepositoriesAPIRouter defines the required methods for binding the api requests to a responses for the RepositoriesAPI
// The RepositoriesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a RepositoriesAPIServicer to perform the required actions, then write the service results to the http response.
type RepositoriesAPIRouter interface { 
	IntegrationsDockerhubDockerhubIntegrationIdRepositoriesExternalGet(http.ResponseWriter, *http.Request)
	IntegrationsGarGarIntegrationIdRepositoriesExternalGet(http.ResponseWriter, *http.Request)
	WorkspacesWorkspaceIdRepositoriesExternalGet(http.ResponseWriter, *http.Request)
	RepositoriesRepositoryIdGet(http.ResponseWriter, *http.Request)
	RepositoriesRepositoryIdImagesExternalGet(http.ResponseWriter, *http.Request)
}


// ArtifactsAPIServicer defines the api actions for the ArtifactsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ArtifactsAPIServicer interface { 
	ArtifactsArtifactIdGet(context.Context, string) (ImplResponse, error)
	ArtifactsArtifactIdComposeFileGet(context.Context, string) (ImplResponse, error)
	SourcesRegistriesRegistrySourceIdArtifactsPost(context.Context, string, CreateRegistrySourceArtifact) (ImplResponse, error)
	SourcesGithubGithubSourceIdArtifactsPost(context.Context, string, CreateGitHubSourceArtifact) (ImplResponse, error)
}


// RegistrySourcesAPIServicer defines the api actions for the RegistrySourcesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type RegistrySourcesAPIServicer interface { 
	WorkspacesWorkspaceIdSourcesRegistriesGet(context.Context, string) (ImplResponse, error)
	WorkspacesWorkspaceIdSourcesRegistriesPost(context.Context, string, CreateRegistrySource) (ImplResponse, error)
	SourcesRegistriesRegistrySourceIdGet(context.Context, string) (ImplResponse, error)
	SourcesRegistriesRegistrySourceIdPatch(context.Context, string, UpdateRegistrySource) (ImplResponse, error)
	SourcesRegistriesRegistrySourceIdComposeFileGet(context.Context, string) (ImplResponse, error)
}


// RepositoriesAPIServicer defines the api actions for the RepositoriesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type RepositoriesAPIServicer interface { 
	IntegrationsDockerhubDockerhubIntegrationIdRepositoriesExternalGet(context.Context, string) (ImplResponse, error)
	IntegrationsGarGarIntegrationIdRepositoriesExternalGet(context.Context, string) (ImplResponse, error)
	WorkspacesWorkspaceIdRepositoriesExternalGet(context.Context, string) (ImplResponse, error)
	RepositoriesRepositoryIdGet(context.Context, string) (ImplResponse, error)
	RepositoriesRepositoryIdImagesExternalGet(context.Context, string) (ImplResponse, error)
}
