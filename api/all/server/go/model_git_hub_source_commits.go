// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.1.0
 */

package openapi




type GitHubSourceCommits struct {

	Object string `json:"object"`

	Repository GitHubRepository `json:"repository"`

	Branch string `json:"branch"`

	Commits GitHubCommitList `json:"commits"`
}

// AssertGitHubSourceCommitsRequired checks if the required fields are not zero-ed
func AssertGitHubSourceCommitsRequired(obj GitHubSourceCommits) error {
	elements := map[string]interface{}{
		"object": obj.Object,
		"repository": obj.Repository,
		"branch": obj.Branch,
		"commits": obj.Commits,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertGitHubRepositoryRequired(obj.Repository); err != nil {
		return err
	}
	if err := AssertGitHubCommitListRequired(obj.Commits); err != nil {
		return err
	}
	return nil
}

// AssertGitHubSourceCommitsConstraints checks if the values respects the defined constraints
func AssertGitHubSourceCommitsConstraints(obj GitHubSourceCommits) error {
	if err := AssertGitHubRepositoryConstraints(obj.Repository); err != nil {
		return err
	}
	if err := AssertGitHubCommitListConstraints(obj.Commits); err != nil {
		return err
	}
	return nil
}
