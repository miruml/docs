// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.1.0
 */

package openapi


import (
	"fmt"
)



type ArtifactStatus string

// List of ArtifactStatus
const (
	QUEUED ArtifactStatus = "queued"
	VERIFYING ArtifactStatus = "verifying"
	BUILDING ArtifactStatus = "building"
	STORING ArtifactStatus = "storing"
	READY ArtifactStatus = "ready"
	FAILED ArtifactStatus = "failed"
)

// AllowedArtifactStatusEnumValues is all the allowed values of ArtifactStatus enum
var AllowedArtifactStatusEnumValues = []ArtifactStatus{
	"queued",
	"verifying",
	"building",
	"storing",
	"ready",
	"failed",
}

// validArtifactStatusEnumValue provides a map of ArtifactStatuss for fast verification of use input
var validArtifactStatusEnumValues = map[ArtifactStatus]struct{}{
	"queued": {},
	"verifying": {},
	"building": {},
	"storing": {},
	"ready": {},
	"failed": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ArtifactStatus) IsValid() bool {
	_, ok := validArtifactStatusEnumValues[v]
	return ok
}

// NewArtifactStatusFromValue returns a pointer to a valid ArtifactStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewArtifactStatusFromValue(v string) (ArtifactStatus, error) {
	ev := ArtifactStatus(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ArtifactStatus: valid values are %v", v, AllowedArtifactStatusEnumValues)
}



// AssertArtifactStatusRequired checks if the required fields are not zero-ed
func AssertArtifactStatusRequired(obj ArtifactStatus) error {
	return nil
}

// AssertArtifactStatusConstraints checks if the values respects the defined constraints
func AssertArtifactStatusConstraints(obj ArtifactStatus) error {
	return nil
}
