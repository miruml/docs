/*
Miru API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GroupDeviceDeployment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GroupDeviceDeployment{}

// GroupDeviceDeployment struct for GroupDeviceDeployment
type GroupDeviceDeployment struct {
	Object string `json:"object"`
	Id string `json:"id"`
	Status string `json:"status"`
	ActivityStatus string `json:"activity_status"`
	TargetStatus *string `json:"target_status,omitempty"`
	ErrorStatus string `json:"error_status"`
}

type _GroupDeviceDeployment GroupDeviceDeployment

// NewGroupDeviceDeployment instantiates a new GroupDeviceDeployment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupDeviceDeployment(object string, id string, status string, activityStatus string, errorStatus string) *GroupDeviceDeployment {
	this := GroupDeviceDeployment{}
	this.Object = object
	this.Id = id
	this.Status = status
	this.ActivityStatus = activityStatus
	this.ErrorStatus = errorStatus
	return &this
}

// NewGroupDeviceDeploymentWithDefaults instantiates a new GroupDeviceDeployment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupDeviceDeploymentWithDefaults() *GroupDeviceDeployment {
	this := GroupDeviceDeployment{}
	return &this
}

// GetObject returns the Object field value
func (o *GroupDeviceDeployment) GetObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Object
}

// GetObjectOk returns a tuple with the Object field value
// and a boolean to check if the value has been set.
func (o *GroupDeviceDeployment) GetObjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Object, true
}

// SetObject sets field value
func (o *GroupDeviceDeployment) SetObject(v string) {
	o.Object = v
}

// GetId returns the Id field value
func (o *GroupDeviceDeployment) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GroupDeviceDeployment) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GroupDeviceDeployment) SetId(v string) {
	o.Id = v
}

// GetStatus returns the Status field value
func (o *GroupDeviceDeployment) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *GroupDeviceDeployment) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *GroupDeviceDeployment) SetStatus(v string) {
	o.Status = v
}

// GetActivityStatus returns the ActivityStatus field value
func (o *GroupDeviceDeployment) GetActivityStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActivityStatus
}

// GetActivityStatusOk returns a tuple with the ActivityStatus field value
// and a boolean to check if the value has been set.
func (o *GroupDeviceDeployment) GetActivityStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActivityStatus, true
}

// SetActivityStatus sets field value
func (o *GroupDeviceDeployment) SetActivityStatus(v string) {
	o.ActivityStatus = v
}

// GetTargetStatus returns the TargetStatus field value if set, zero value otherwise.
func (o *GroupDeviceDeployment) GetTargetStatus() string {
	if o == nil || IsNil(o.TargetStatus) {
		var ret string
		return ret
	}
	return *o.TargetStatus
}

// GetTargetStatusOk returns a tuple with the TargetStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupDeviceDeployment) GetTargetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.TargetStatus) {
		return nil, false
	}
	return o.TargetStatus, true
}

// HasTargetStatus returns a boolean if a field has been set.
func (o *GroupDeviceDeployment) HasTargetStatus() bool {
	if o != nil && !IsNil(o.TargetStatus) {
		return true
	}

	return false
}

// SetTargetStatus gets a reference to the given string and assigns it to the TargetStatus field.
func (o *GroupDeviceDeployment) SetTargetStatus(v string) {
	o.TargetStatus = &v
}

// GetErrorStatus returns the ErrorStatus field value
func (o *GroupDeviceDeployment) GetErrorStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ErrorStatus
}

// GetErrorStatusOk returns a tuple with the ErrorStatus field value
// and a boolean to check if the value has been set.
func (o *GroupDeviceDeployment) GetErrorStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorStatus, true
}

// SetErrorStatus sets field value
func (o *GroupDeviceDeployment) SetErrorStatus(v string) {
	o.ErrorStatus = v
}

func (o GroupDeviceDeployment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GroupDeviceDeployment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["object"] = o.Object
	toSerialize["id"] = o.Id
	toSerialize["status"] = o.Status
	toSerialize["activity_status"] = o.ActivityStatus
	if !IsNil(o.TargetStatus) {
		toSerialize["target_status"] = o.TargetStatus
	}
	toSerialize["error_status"] = o.ErrorStatus
	return toSerialize, nil
}

func (o *GroupDeviceDeployment) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"object",
		"id",
		"status",
		"activity_status",
		"error_status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGroupDeviceDeployment := _GroupDeviceDeployment{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGroupDeviceDeployment)

	if err != nil {
		return err
	}

	*o = GroupDeviceDeployment(varGroupDeviceDeployment)

	return err
}

type NullableGroupDeviceDeployment struct {
	value *GroupDeviceDeployment
	isSet bool
}

func (v NullableGroupDeviceDeployment) Get() *GroupDeviceDeployment {
	return v.value
}

func (v *NullableGroupDeviceDeployment) Set(val *GroupDeviceDeployment) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupDeviceDeployment) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupDeviceDeployment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupDeviceDeployment(val *GroupDeviceDeployment) *NullableGroupDeviceDeployment {
	return &NullableGroupDeviceDeployment{value: val, isSet: true}
}

func (v NullableGroupDeviceDeployment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupDeviceDeployment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


