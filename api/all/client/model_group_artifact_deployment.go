/*
Miru API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GroupArtifactDeployment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GroupArtifactDeployment{}

// GroupArtifactDeployment struct for GroupArtifactDeployment
type GroupArtifactDeployment struct {
	Object string `json:"object"`
	Id string `json:"id"`
	DeviceId string `json:"device_id"`
	Status string `json:"status"`
	ActivityStatus string `json:"activity_status"`
	ErrorStatus string `json:"error_status"`
}

type _GroupArtifactDeployment GroupArtifactDeployment

// NewGroupArtifactDeployment instantiates a new GroupArtifactDeployment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupArtifactDeployment(object string, id string, deviceId string, status string, activityStatus string, errorStatus string) *GroupArtifactDeployment {
	this := GroupArtifactDeployment{}
	this.Object = object
	this.Id = id
	this.DeviceId = deviceId
	this.Status = status
	this.ActivityStatus = activityStatus
	this.ErrorStatus = errorStatus
	return &this
}

// NewGroupArtifactDeploymentWithDefaults instantiates a new GroupArtifactDeployment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupArtifactDeploymentWithDefaults() *GroupArtifactDeployment {
	this := GroupArtifactDeployment{}
	return &this
}

// GetObject returns the Object field value
func (o *GroupArtifactDeployment) GetObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Object
}

// GetObjectOk returns a tuple with the Object field value
// and a boolean to check if the value has been set.
func (o *GroupArtifactDeployment) GetObjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Object, true
}

// SetObject sets field value
func (o *GroupArtifactDeployment) SetObject(v string) {
	o.Object = v
}

// GetId returns the Id field value
func (o *GroupArtifactDeployment) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GroupArtifactDeployment) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GroupArtifactDeployment) SetId(v string) {
	o.Id = v
}

// GetDeviceId returns the DeviceId field value
func (o *GroupArtifactDeployment) GetDeviceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value
// and a boolean to check if the value has been set.
func (o *GroupArtifactDeployment) GetDeviceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeviceId, true
}

// SetDeviceId sets field value
func (o *GroupArtifactDeployment) SetDeviceId(v string) {
	o.DeviceId = v
}

// GetStatus returns the Status field value
func (o *GroupArtifactDeployment) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *GroupArtifactDeployment) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *GroupArtifactDeployment) SetStatus(v string) {
	o.Status = v
}

// GetActivityStatus returns the ActivityStatus field value
func (o *GroupArtifactDeployment) GetActivityStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActivityStatus
}

// GetActivityStatusOk returns a tuple with the ActivityStatus field value
// and a boolean to check if the value has been set.
func (o *GroupArtifactDeployment) GetActivityStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActivityStatus, true
}

// SetActivityStatus sets field value
func (o *GroupArtifactDeployment) SetActivityStatus(v string) {
	o.ActivityStatus = v
}

// GetErrorStatus returns the ErrorStatus field value
func (o *GroupArtifactDeployment) GetErrorStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ErrorStatus
}

// GetErrorStatusOk returns a tuple with the ErrorStatus field value
// and a boolean to check if the value has been set.
func (o *GroupArtifactDeployment) GetErrorStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorStatus, true
}

// SetErrorStatus sets field value
func (o *GroupArtifactDeployment) SetErrorStatus(v string) {
	o.ErrorStatus = v
}

func (o GroupArtifactDeployment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GroupArtifactDeployment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["object"] = o.Object
	toSerialize["id"] = o.Id
	toSerialize["device_id"] = o.DeviceId
	toSerialize["status"] = o.Status
	toSerialize["activity_status"] = o.ActivityStatus
	toSerialize["error_status"] = o.ErrorStatus
	return toSerialize, nil
}

func (o *GroupArtifactDeployment) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"object",
		"id",
		"device_id",
		"status",
		"activity_status",
		"error_status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGroupArtifactDeployment := _GroupArtifactDeployment{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGroupArtifactDeployment)

	if err != nil {
		return err
	}

	*o = GroupArtifactDeployment(varGroupArtifactDeployment)

	return err
}

type NullableGroupArtifactDeployment struct {
	value *GroupArtifactDeployment
	isSet bool
}

func (v NullableGroupArtifactDeployment) Get() *GroupArtifactDeployment {
	return v.value
}

func (v *NullableGroupArtifactDeployment) Set(val *GroupArtifactDeployment) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupArtifactDeployment) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupArtifactDeployment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupArtifactDeployment(val *GroupArtifactDeployment) *NullableGroupArtifactDeployment {
	return &NullableGroupArtifactDeployment{value: val, isSet: true}
}

func (v NullableGroupArtifactDeployment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupArtifactDeployment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


