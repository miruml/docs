/*
Miru API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the ArtifactDeployment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArtifactDeployment{}

// ArtifactDeployment struct for ArtifactDeployment
type ArtifactDeployment struct {
	Object string `json:"object"`
	Id string `json:"id"`
	Device *Device `json:"device,omitempty"`
	Status string `json:"status"`
	ActivityStatus string `json:"activity_status"`
	ErrorStatus string `json:"error_status"`
	CreatedBy NullableUser `json:"created_by"`
	CreatedAt time.Time `json:"created_at"`
	StartedAt NullableTime `json:"started_at"`
	FinishedAt NullableTime `json:"finished_at"`
	RemovedAt NullableTime `json:"removed_at"`
	OnDevice bool `json:"on_device"`
}

type _ArtifactDeployment ArtifactDeployment

// NewArtifactDeployment instantiates a new ArtifactDeployment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArtifactDeployment(object string, id string, status string, activityStatus string, errorStatus string, createdBy NullableUser, createdAt time.Time, startedAt NullableTime, finishedAt NullableTime, removedAt NullableTime, onDevice bool) *ArtifactDeployment {
	this := ArtifactDeployment{}
	this.Object = object
	this.Id = id
	this.Status = status
	this.ActivityStatus = activityStatus
	this.ErrorStatus = errorStatus
	this.CreatedBy = createdBy
	this.CreatedAt = createdAt
	this.StartedAt = startedAt
	this.FinishedAt = finishedAt
	this.RemovedAt = removedAt
	this.OnDevice = onDevice
	return &this
}

// NewArtifactDeploymentWithDefaults instantiates a new ArtifactDeployment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArtifactDeploymentWithDefaults() *ArtifactDeployment {
	this := ArtifactDeployment{}
	return &this
}

// GetObject returns the Object field value
func (o *ArtifactDeployment) GetObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Object
}

// GetObjectOk returns a tuple with the Object field value
// and a boolean to check if the value has been set.
func (o *ArtifactDeployment) GetObjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Object, true
}

// SetObject sets field value
func (o *ArtifactDeployment) SetObject(v string) {
	o.Object = v
}

// GetId returns the Id field value
func (o *ArtifactDeployment) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ArtifactDeployment) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ArtifactDeployment) SetId(v string) {
	o.Id = v
}

// GetDevice returns the Device field value if set, zero value otherwise.
func (o *ArtifactDeployment) GetDevice() Device {
	if o == nil || IsNil(o.Device) {
		var ret Device
		return ret
	}
	return *o.Device
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactDeployment) GetDeviceOk() (*Device, bool) {
	if o == nil || IsNil(o.Device) {
		return nil, false
	}
	return o.Device, true
}

// HasDevice returns a boolean if a field has been set.
func (o *ArtifactDeployment) HasDevice() bool {
	if o != nil && !IsNil(o.Device) {
		return true
	}

	return false
}

// SetDevice gets a reference to the given Device and assigns it to the Device field.
func (o *ArtifactDeployment) SetDevice(v Device) {
	o.Device = &v
}

// GetStatus returns the Status field value
func (o *ArtifactDeployment) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ArtifactDeployment) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ArtifactDeployment) SetStatus(v string) {
	o.Status = v
}

// GetActivityStatus returns the ActivityStatus field value
func (o *ArtifactDeployment) GetActivityStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActivityStatus
}

// GetActivityStatusOk returns a tuple with the ActivityStatus field value
// and a boolean to check if the value has been set.
func (o *ArtifactDeployment) GetActivityStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActivityStatus, true
}

// SetActivityStatus sets field value
func (o *ArtifactDeployment) SetActivityStatus(v string) {
	o.ActivityStatus = v
}

// GetErrorStatus returns the ErrorStatus field value
func (o *ArtifactDeployment) GetErrorStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ErrorStatus
}

// GetErrorStatusOk returns a tuple with the ErrorStatus field value
// and a boolean to check if the value has been set.
func (o *ArtifactDeployment) GetErrorStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorStatus, true
}

// SetErrorStatus sets field value
func (o *ArtifactDeployment) SetErrorStatus(v string) {
	o.ErrorStatus = v
}

// GetCreatedBy returns the CreatedBy field value
// If the value is explicit nil, the zero value for User will be returned
func (o *ArtifactDeployment) GetCreatedBy() User {
	if o == nil || o.CreatedBy.Get() == nil {
		var ret User
		return ret
	}

	return *o.CreatedBy.Get()
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtifactDeployment) GetCreatedByOk() (*User, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedBy.Get(), o.CreatedBy.IsSet()
}

// SetCreatedBy sets field value
func (o *ArtifactDeployment) SetCreatedBy(v User) {
	o.CreatedBy.Set(&v)
}

// GetCreatedAt returns the CreatedAt field value
func (o *ArtifactDeployment) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ArtifactDeployment) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ArtifactDeployment) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetStartedAt returns the StartedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *ArtifactDeployment) GetStartedAt() time.Time {
	if o == nil || o.StartedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.StartedAt.Get()
}

// GetStartedAtOk returns a tuple with the StartedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtifactDeployment) GetStartedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartedAt.Get(), o.StartedAt.IsSet()
}

// SetStartedAt sets field value
func (o *ArtifactDeployment) SetStartedAt(v time.Time) {
	o.StartedAt.Set(&v)
}

// GetFinishedAt returns the FinishedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *ArtifactDeployment) GetFinishedAt() time.Time {
	if o == nil || o.FinishedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.FinishedAt.Get()
}

// GetFinishedAtOk returns a tuple with the FinishedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtifactDeployment) GetFinishedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.FinishedAt.Get(), o.FinishedAt.IsSet()
}

// SetFinishedAt sets field value
func (o *ArtifactDeployment) SetFinishedAt(v time.Time) {
	o.FinishedAt.Set(&v)
}

// GetRemovedAt returns the RemovedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *ArtifactDeployment) GetRemovedAt() time.Time {
	if o == nil || o.RemovedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.RemovedAt.Get()
}

// GetRemovedAtOk returns a tuple with the RemovedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtifactDeployment) GetRemovedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.RemovedAt.Get(), o.RemovedAt.IsSet()
}

// SetRemovedAt sets field value
func (o *ArtifactDeployment) SetRemovedAt(v time.Time) {
	o.RemovedAt.Set(&v)
}

// GetOnDevice returns the OnDevice field value
func (o *ArtifactDeployment) GetOnDevice() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.OnDevice
}

// GetOnDeviceOk returns a tuple with the OnDevice field value
// and a boolean to check if the value has been set.
func (o *ArtifactDeployment) GetOnDeviceOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OnDevice, true
}

// SetOnDevice sets field value
func (o *ArtifactDeployment) SetOnDevice(v bool) {
	o.OnDevice = v
}

func (o ArtifactDeployment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArtifactDeployment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["object"] = o.Object
	toSerialize["id"] = o.Id
	if !IsNil(o.Device) {
		toSerialize["device"] = o.Device
	}
	toSerialize["status"] = o.Status
	toSerialize["activity_status"] = o.ActivityStatus
	toSerialize["error_status"] = o.ErrorStatus
	toSerialize["created_by"] = o.CreatedBy.Get()
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["started_at"] = o.StartedAt.Get()
	toSerialize["finished_at"] = o.FinishedAt.Get()
	toSerialize["removed_at"] = o.RemovedAt.Get()
	toSerialize["on_device"] = o.OnDevice
	return toSerialize, nil
}

func (o *ArtifactDeployment) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"object",
		"id",
		"status",
		"activity_status",
		"error_status",
		"created_by",
		"created_at",
		"started_at",
		"finished_at",
		"removed_at",
		"on_device",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varArtifactDeployment := _ArtifactDeployment{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varArtifactDeployment)

	if err != nil {
		return err
	}

	*o = ArtifactDeployment(varArtifactDeployment)

	return err
}

type NullableArtifactDeployment struct {
	value *ArtifactDeployment
	isSet bool
}

func (v NullableArtifactDeployment) Get() *ArtifactDeployment {
	return v.value
}

func (v *NullableArtifactDeployment) Set(val *ArtifactDeployment) {
	v.value = val
	v.isSet = true
}

func (v NullableArtifactDeployment) IsSet() bool {
	return v.isSet
}

func (v *NullableArtifactDeployment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArtifactDeployment(val *ArtifactDeployment) *NullableArtifactDeployment {
	return &NullableArtifactDeployment{value: val, isSet: true}
}

func (v NullableArtifactDeployment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArtifactDeployment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


