/*
Miru API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the ArtifactDeployment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArtifactDeployment{}

// ArtifactDeployment struct for ArtifactDeployment
type ArtifactDeployment struct {
	Object string `json:"object"`
	Id string `json:"id"`
	Device *Device `json:"device,omitempty"`
	Status string `json:"status"`
	ActivityStatus string `json:"activity_status"`
	ErrorStatus string `json:"error_status"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	FinishedAt NullableTime `json:"finished_at,omitempty"`
}

type _ArtifactDeployment ArtifactDeployment

// NewArtifactDeployment instantiates a new ArtifactDeployment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArtifactDeployment(object string, id string, status string, activityStatus string, errorStatus string) *ArtifactDeployment {
	this := ArtifactDeployment{}
	this.Object = object
	this.Id = id
	this.Status = status
	this.ActivityStatus = activityStatus
	this.ErrorStatus = errorStatus
	return &this
}

// NewArtifactDeploymentWithDefaults instantiates a new ArtifactDeployment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArtifactDeploymentWithDefaults() *ArtifactDeployment {
	this := ArtifactDeployment{}
	return &this
}

// GetObject returns the Object field value
func (o *ArtifactDeployment) GetObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Object
}

// GetObjectOk returns a tuple with the Object field value
// and a boolean to check if the value has been set.
func (o *ArtifactDeployment) GetObjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Object, true
}

// SetObject sets field value
func (o *ArtifactDeployment) SetObject(v string) {
	o.Object = v
}

// GetId returns the Id field value
func (o *ArtifactDeployment) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ArtifactDeployment) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ArtifactDeployment) SetId(v string) {
	o.Id = v
}

// GetDevice returns the Device field value if set, zero value otherwise.
func (o *ArtifactDeployment) GetDevice() Device {
	if o == nil || IsNil(o.Device) {
		var ret Device
		return ret
	}
	return *o.Device
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactDeployment) GetDeviceOk() (*Device, bool) {
	if o == nil || IsNil(o.Device) {
		return nil, false
	}
	return o.Device, true
}

// HasDevice returns a boolean if a field has been set.
func (o *ArtifactDeployment) HasDevice() bool {
	if o != nil && !IsNil(o.Device) {
		return true
	}

	return false
}

// SetDevice gets a reference to the given Device and assigns it to the Device field.
func (o *ArtifactDeployment) SetDevice(v Device) {
	o.Device = &v
}

// GetStatus returns the Status field value
func (o *ArtifactDeployment) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ArtifactDeployment) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ArtifactDeployment) SetStatus(v string) {
	o.Status = v
}

// GetActivityStatus returns the ActivityStatus field value
func (o *ArtifactDeployment) GetActivityStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActivityStatus
}

// GetActivityStatusOk returns a tuple with the ActivityStatus field value
// and a boolean to check if the value has been set.
func (o *ArtifactDeployment) GetActivityStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActivityStatus, true
}

// SetActivityStatus sets field value
func (o *ArtifactDeployment) SetActivityStatus(v string) {
	o.ActivityStatus = v
}

// GetErrorStatus returns the ErrorStatus field value
func (o *ArtifactDeployment) GetErrorStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ErrorStatus
}

// GetErrorStatusOk returns a tuple with the ErrorStatus field value
// and a boolean to check if the value has been set.
func (o *ArtifactDeployment) GetErrorStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorStatus, true
}

// SetErrorStatus sets field value
func (o *ArtifactDeployment) SetErrorStatus(v string) {
	o.ErrorStatus = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ArtifactDeployment) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactDeployment) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ArtifactDeployment) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ArtifactDeployment) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetFinishedAt returns the FinishedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArtifactDeployment) GetFinishedAt() time.Time {
	if o == nil || IsNil(o.FinishedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.FinishedAt.Get()
}

// GetFinishedAtOk returns a tuple with the FinishedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtifactDeployment) GetFinishedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.FinishedAt.Get(), o.FinishedAt.IsSet()
}

// HasFinishedAt returns a boolean if a field has been set.
func (o *ArtifactDeployment) HasFinishedAt() bool {
	if o != nil && o.FinishedAt.IsSet() {
		return true
	}

	return false
}

// SetFinishedAt gets a reference to the given NullableTime and assigns it to the FinishedAt field.
func (o *ArtifactDeployment) SetFinishedAt(v time.Time) {
	o.FinishedAt.Set(&v)
}
// SetFinishedAtNil sets the value for FinishedAt to be an explicit nil
func (o *ArtifactDeployment) SetFinishedAtNil() {
	o.FinishedAt.Set(nil)
}

// UnsetFinishedAt ensures that no value is present for FinishedAt, not even an explicit nil
func (o *ArtifactDeployment) UnsetFinishedAt() {
	o.FinishedAt.Unset()
}

func (o ArtifactDeployment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArtifactDeployment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["object"] = o.Object
	toSerialize["id"] = o.Id
	if !IsNil(o.Device) {
		toSerialize["device"] = o.Device
	}
	toSerialize["status"] = o.Status
	toSerialize["activity_status"] = o.ActivityStatus
	toSerialize["error_status"] = o.ErrorStatus
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.FinishedAt.IsSet() {
		toSerialize["finished_at"] = o.FinishedAt.Get()
	}
	return toSerialize, nil
}

func (o *ArtifactDeployment) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"object",
		"id",
		"status",
		"activity_status",
		"error_status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varArtifactDeployment := _ArtifactDeployment{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varArtifactDeployment)

	if err != nil {
		return err
	}

	*o = ArtifactDeployment(varArtifactDeployment)

	return err
}

type NullableArtifactDeployment struct {
	value *ArtifactDeployment
	isSet bool
}

func (v NullableArtifactDeployment) Get() *ArtifactDeployment {
	return v.value
}

func (v *NullableArtifactDeployment) Set(val *ArtifactDeployment) {
	v.value = val
	v.isSet = true
}

func (v NullableArtifactDeployment) IsSet() bool {
	return v.isSet
}

func (v *NullableArtifactDeployment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArtifactDeployment(val *ArtifactDeployment) *NullableArtifactDeployment {
	return &NullableArtifactDeployment{value: val, isSet: true}
}

func (v NullableArtifactDeployment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArtifactDeployment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


