/*
Miru API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the VerifyComposeFileResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VerifyComposeFileResponse{}

// VerifyComposeFileResponse struct for VerifyComposeFileResponse
type VerifyComposeFileResponse struct {
	Object string `json:"object"`
	Content string `json:"content"`
	IsValid bool `json:"is_valid"`
	IsSchemaValid bool `json:"is_schema_valid"`
	SchemaError *string `json:"schema_error,omitempty"`
	Images ComposeFileImageList `json:"images"`
}

type _VerifyComposeFileResponse VerifyComposeFileResponse

// NewVerifyComposeFileResponse instantiates a new VerifyComposeFileResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerifyComposeFileResponse(object string, content string, isValid bool, isSchemaValid bool, images ComposeFileImageList) *VerifyComposeFileResponse {
	this := VerifyComposeFileResponse{}
	this.Object = object
	this.Content = content
	this.IsValid = isValid
	this.IsSchemaValid = isSchemaValid
	this.Images = images
	return &this
}

// NewVerifyComposeFileResponseWithDefaults instantiates a new VerifyComposeFileResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerifyComposeFileResponseWithDefaults() *VerifyComposeFileResponse {
	this := VerifyComposeFileResponse{}
	return &this
}

// GetObject returns the Object field value
func (o *VerifyComposeFileResponse) GetObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Object
}

// GetObjectOk returns a tuple with the Object field value
// and a boolean to check if the value has been set.
func (o *VerifyComposeFileResponse) GetObjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Object, true
}

// SetObject sets field value
func (o *VerifyComposeFileResponse) SetObject(v string) {
	o.Object = v
}

// GetContent returns the Content field value
func (o *VerifyComposeFileResponse) GetContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *VerifyComposeFileResponse) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *VerifyComposeFileResponse) SetContent(v string) {
	o.Content = v
}

// GetIsValid returns the IsValid field value
func (o *VerifyComposeFileResponse) GetIsValid() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsValid
}

// GetIsValidOk returns a tuple with the IsValid field value
// and a boolean to check if the value has been set.
func (o *VerifyComposeFileResponse) GetIsValidOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsValid, true
}

// SetIsValid sets field value
func (o *VerifyComposeFileResponse) SetIsValid(v bool) {
	o.IsValid = v
}

// GetIsSchemaValid returns the IsSchemaValid field value
func (o *VerifyComposeFileResponse) GetIsSchemaValid() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsSchemaValid
}

// GetIsSchemaValidOk returns a tuple with the IsSchemaValid field value
// and a boolean to check if the value has been set.
func (o *VerifyComposeFileResponse) GetIsSchemaValidOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsSchemaValid, true
}

// SetIsSchemaValid sets field value
func (o *VerifyComposeFileResponse) SetIsSchemaValid(v bool) {
	o.IsSchemaValid = v
}

// GetSchemaError returns the SchemaError field value if set, zero value otherwise.
func (o *VerifyComposeFileResponse) GetSchemaError() string {
	if o == nil || IsNil(o.SchemaError) {
		var ret string
		return ret
	}
	return *o.SchemaError
}

// GetSchemaErrorOk returns a tuple with the SchemaError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerifyComposeFileResponse) GetSchemaErrorOk() (*string, bool) {
	if o == nil || IsNil(o.SchemaError) {
		return nil, false
	}
	return o.SchemaError, true
}

// HasSchemaError returns a boolean if a field has been set.
func (o *VerifyComposeFileResponse) HasSchemaError() bool {
	if o != nil && !IsNil(o.SchemaError) {
		return true
	}

	return false
}

// SetSchemaError gets a reference to the given string and assigns it to the SchemaError field.
func (o *VerifyComposeFileResponse) SetSchemaError(v string) {
	o.SchemaError = &v
}

// GetImages returns the Images field value
func (o *VerifyComposeFileResponse) GetImages() ComposeFileImageList {
	if o == nil {
		var ret ComposeFileImageList
		return ret
	}

	return o.Images
}

// GetImagesOk returns a tuple with the Images field value
// and a boolean to check if the value has been set.
func (o *VerifyComposeFileResponse) GetImagesOk() (*ComposeFileImageList, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Images, true
}

// SetImages sets field value
func (o *VerifyComposeFileResponse) SetImages(v ComposeFileImageList) {
	o.Images = v
}

func (o VerifyComposeFileResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VerifyComposeFileResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["object"] = o.Object
	toSerialize["content"] = o.Content
	toSerialize["is_valid"] = o.IsValid
	toSerialize["is_schema_valid"] = o.IsSchemaValid
	if !IsNil(o.SchemaError) {
		toSerialize["schema_error"] = o.SchemaError
	}
	toSerialize["images"] = o.Images
	return toSerialize, nil
}

func (o *VerifyComposeFileResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"object",
		"content",
		"is_valid",
		"is_schema_valid",
		"images",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVerifyComposeFileResponse := _VerifyComposeFileResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVerifyComposeFileResponse)

	if err != nil {
		return err
	}

	*o = VerifyComposeFileResponse(varVerifyComposeFileResponse)

	return err
}

type NullableVerifyComposeFileResponse struct {
	value *VerifyComposeFileResponse
	isSet bool
}

func (v NullableVerifyComposeFileResponse) Get() *VerifyComposeFileResponse {
	return v.value
}

func (v *NullableVerifyComposeFileResponse) Set(val *VerifyComposeFileResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableVerifyComposeFileResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableVerifyComposeFileResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerifyComposeFileResponse(val *VerifyComposeFileResponse) *NullableVerifyComposeFileResponse {
	return &NullableVerifyComposeFileResponse{value: val, isSet: true}
}

func (v NullableVerifyComposeFileResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerifyComposeFileResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


