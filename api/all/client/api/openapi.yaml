openapi: 3.0.3
info:
  title: Miru API
  version: 0.1.0
servers:
- description: Production
  url: "https://api.miruml.com/{audience}/{version}"
  variables:
    audience:
      default: internal
      enum:
      - internal
      - internal/devices
    version:
      default: v1
- description: Development
  url: "https://dev.api.miruml.com/{audience}/{version}"
  variables:
    audience:
      default: internal
      enum:
      - internal
      - internal/devices
    version:
      default: v1
- description: Local Development
  url: "https://localhost:8080/{audience}/{version}"
  variables:
    audience:
      default: internal
      enum:
      - internal
      - internal/devices
    version:
      default: v1
security:
- ClerkAuth: []
paths:
  /artifacts/{artifact_id}:
    get:
      parameters:
      - description: The unique identifier of the artifact
        in: path
        name: artifact_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifact'
          description: Successfully retrieved the artifact.
      tags:
      - Artifacts
  /artifacts/{artifact_id}/compose_file:
    get:
      parameters:
      - description: The unique identifier of the artifact
        in: path
        name: artifact_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComposeFile'
          description: Successfully retrieved the compose file for the artifact.
      tags:
      - Artifacts
  /sources/registries/{registry_source_id}/artifacts:
    post:
      parameters:
      - description: The unique identifier of the registry source
        in: path
        name: registry_source_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRegistrySourceArtifact'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifact'
          description: Successfully created the artifact.
      tags:
      - Artifacts
  /sources/github/{github_source_id}/artifacts:
    post:
      parameters:
      - description: The unique identifier of the github source
        in: path
        name: github_source_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGitHubSourceArtifact'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifact'
          description: Successfully created the artifact.
      tags:
      - Artifacts
  /workspaces/{workspace_id}/sources/registries:
    get:
      parameters:
      - description: The unique identifier of the workspace
        in: path
        name: workspace_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrySourceList'
          description: Successfully retrieved the registry sources for the workspace.
      tags:
      - Registry Sources
    post:
      parameters:
      - description: The unique identifier of the workspace
        in: path
        name: workspace_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRegistrySource'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrySource'
          description: Successfully created the registry source for the workspace.
      tags:
      - Registry Sources
  /sources/registries/{registry_source_id}:
    get:
      parameters:
      - description: The unique identifier of the registry source
        in: path
        name: registry_source_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrySource'
          description: Successfully retrieved the registry source.
      tags:
      - Registry Sources
    patch:
      parameters:
      - description: The unique identifier of the registry source
        in: path
        name: registry_source_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRegistrySource'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrySource'
          description: Successfully retrieved the registry source.
      tags:
      - Registry Sources
  /sources/registries/{registry_source_id}/compose_file:
    get:
      parameters:
      - description: The unique identifier of the registry source
        in: path
        name: registry_source_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComposeFile'
          description: Successfully retrieved the compose file for the registry source.
      tags:
      - Registry Sources
  /integrations/dockerhub/{dockerhub_integration_id}/repositories/external:
    get:
      parameters:
      - description: The unique identifier of the dockerhub integration
        in: path
        name: dockerhub_integration_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalRepositoryList'
          description: Successfully retrieved the repositories for the dockerhub integration.
      tags:
      - Repositories
  /integrations/gar/{gar_integration_id}/repositories/external:
    get:
      parameters:
      - description: The unique identifier of the google artifact registry integration
        in: path
        name: gar_integration_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalRepositoryList'
          description: Successfully retrieved the repositories for the google artifact
            registry integration.
      tags:
      - Repositories
  /workspaces/{workspace_id}/repositories/external:
    get:
      parameters:
      - description: The unique identifier of the workspace
        in: path
        name: workspace_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalRepositoryList'
          description: Successfully retrieved the repositories for the workspace.
      tags:
      - Repositories
  /repositories/{repository_id}:
    get:
      parameters:
      - description: The unique identifier of the repository
        in: path
        name: repository_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
          description: Successfully retrieved the repository.
      tags:
      - Repositories
  /repositories/{repository_id}/images/external:
    get:
      parameters:
      - description: The unique identifier of the repository
        in: path
        name: repository_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalImageList'
          description: Successfully retrieved the images for the repository.
      tags:
      - Repositories
components:
  parameters:
    artifact_id:
      description: The unique identifier of the artifact
      in: path
      name: artifact_id
      required: true
      schema:
        type: string
    registry_source_id:
      description: The unique identifier of the registry source
      in: path
      name: registry_source_id
      required: true
      schema:
        type: string
    github_source_id:
      description: The unique identifier of the github source
      in: path
      name: github_source_id
      required: true
      schema:
        type: string
    workspace_id:
      description: The unique identifier of the workspace
      in: path
      name: workspace_id
      required: true
      schema:
        type: string
    dockerhub_integration_id:
      description: The unique identifier of the dockerhub integration
      in: path
      name: dockerhub_integration_id
      required: true
      schema:
        type: string
    gar_integration_id:
      description: The unique identifier of the google artifact registry integration
      in: path
      name: gar_integration_id
      required: true
      schema:
        type: string
    repository_id:
      description: The unique identifier of the repository
      in: path
      name: repository_id
      required: true
      schema:
        type: string
  schemas:
    Artifact:
      example:
        aarch64: true
        x86_64: false
        ready_at: 2024-11-03T14:25:50Z
        created_at: 2024-11-03T14:19:50Z
        source_type: github
        github_source_data:
          build_path: valid/wordpress
          head_commit:
            id: 94d8a2681f1ef81b0362cdb77bf37691bc1d2b03
            message: Update README.md
            url: https://github.com/miruml/e2e-tests/commit/94d8a2681f1ef81b0362cdb77bf37691bc1d2b03
          sender:
            avatar_url: https://avatars.githubusercontent.com/u/92611223?v=4
            html_url: https://github.com/bensmidt
            id: 1234
            type: User
            login: bensmidt
          repository:
            full_name: miruml/e2e-tests
            pushed_at: 2024-11-03T14:19:50Z
            html_url: https://github.com/miruml/e2e-tests
            clone_url: https://github.com/miruml/e2e-tests.git
            id: 819141000
          branch: main
        id: art_1234
        source_id: reg_src_1234
        failed_at: 2024-11-03T14:25:50Z
        object: artifact
        status: queued
      properties:
        object:
          example: artifact
          type: string
        id:
          example: art_1234
          type: string
        status:
          $ref: '#/components/schemas/ArtifactStatus'
        source_id:
          example: reg_src_1234
          type: string
        source_type:
          enum:
          - github
          - registry
          type: string
        github_source_data:
          $ref: '#/components/schemas/GitHubSourceData'
        aarch64:
          example: true
          type: boolean
        x86_64:
          example: false
          type: boolean
        created_at:
          example: 2024-11-03T14:19:50Z
          format: date-time
          type: string
        ready_at:
          example: 2024-11-03T14:25:50Z
          format: date-time
          nullable: true
          type: string
        failed_at:
          example: 2024-11-03T14:25:50Z
          format: date-time
          nullable: true
          type: string
      required:
      - aarch64
      - created_at
      - id
      - object
      - source_id
      - source_type
      - status
      - x86_64
      title: Artifact
      type: object
    ArtifactStatus:
      enum:
      - queued
      - verifying
      - building
      - storing
      - ready
      - failed
      title: Artifact Status
      type: string
    GitHubSourceData:
      example:
        build_path: valid/wordpress
        head_commit:
          id: 94d8a2681f1ef81b0362cdb77bf37691bc1d2b03
          message: Update README.md
          url: https://github.com/miruml/e2e-tests/commit/94d8a2681f1ef81b0362cdb77bf37691bc1d2b03
        sender:
          avatar_url: https://avatars.githubusercontent.com/u/92611223?v=4
          html_url: https://github.com/bensmidt
          id: 1234
          type: User
          login: bensmidt
        repository:
          full_name: miruml/e2e-tests
          pushed_at: 2024-11-03T14:19:50Z
          html_url: https://github.com/miruml/e2e-tests
          clone_url: https://github.com/miruml/e2e-tests.git
          id: 819141000
        branch: main
      properties:
        sender:
          $ref: '#/components/schemas/GitHubSourceDataSender'
        branch:
          example: main
          type: string
        build_path:
          example: valid/wordpress
          type: string
        repository:
          $ref: '#/components/schemas/GitHubSourceDataRepository'
        head_commit:
          $ref: '#/components/schemas/GitHubSourceDataHeadCommit'
      required:
      - branch
      - build_path
      - head_commit
      - repository
      - sender
      title: GitHub Source Data
      type: object
    GitHubSourceDataSender:
      example:
        avatar_url: https://avatars.githubusercontent.com/u/92611223?v=4
        html_url: https://github.com/bensmidt
        id: 1234
        type: User
        login: bensmidt
      properties:
        id:
          example: 1234
          format: int64
          type: integer
        type:
          example: User
          type: string
        login:
          example: bensmidt
          type: string
        html_url:
          example: https://github.com/bensmidt
          type: string
        avatar_url:
          example: https://avatars.githubusercontent.com/u/92611223?v=4
          type: string
      required:
      - avatar_url
      - html_url
      - id
      - login
      - type
      title: GitHub Source Data Sender
      type: object
    GitHubSourceDataRepository:
      example:
        full_name: miruml/e2e-tests
        pushed_at: 2024-11-03T14:19:50Z
        html_url: https://github.com/miruml/e2e-tests
        clone_url: https://github.com/miruml/e2e-tests.git
        id: 819141000
      properties:
        id:
          example: 819141000
          format: int64
          type: integer
        html_url:
          example: https://github.com/miruml/e2e-tests
          type: string
        clone_url:
          example: https://github.com/miruml/e2e-tests.git
          type: string
        full_name:
          example: miruml/e2e-tests
          type: string
        pushed_at:
          example: 2024-11-03T14:19:50Z
          format: date-time
          type: string
      required:
      - clone_url
      - full_name
      - html_url
      - id
      - pushed_at
      title: GitHub Source Data Repository
      type: object
    GitHubSourceDataHeadCommit:
      example:
        id: 94d8a2681f1ef81b0362cdb77bf37691bc1d2b03
        message: Update README.md
        url: https://github.com/miruml/e2e-tests/commit/94d8a2681f1ef81b0362cdb77bf37691bc1d2b03
      properties:
        id:
          example: 94d8a2681f1ef81b0362cdb77bf37691bc1d2b03
          type: string
        url:
          example: https://github.com/miruml/e2e-tests/commit/94d8a2681f1ef81b0362cdb77bf37691bc1d2b03
          type: string
        message:
          example: Update README.md
          type: string
      required:
      - id
      - message
      - url
      title: GitHub Source Data Head Commit
      type: object
    ComposeFile:
      example:
        content: |-
          name: miru
          services:
            redis:
            image: redis:latest
            restart: always
        object: compose_file
      properties:
        object:
          example: compose_file
          type: string
        content:
          example: |-
            name: miru
            services:
              redis:
              image: redis:latest
              restart: always
          type: string
      required:
      - content
      - object
      title: Compose File
      type: object
    CreateRegistrySourceArtifact:
      example:
        images:
        - repo_id: repo_1234
          tag: v1.3.4
        - repo_id: repo_1234
          tag: v1.3.4
      properties:
        images:
          items:
            $ref: '#/components/schemas/CreateRegistrySourceArtifact_images_inner'
          type: array
      required:
      - images
      title: Create Registry Source Artifact
      type: object
    CreateGitHubSourceArtifact:
      example:
        commit_id: 94d8a2681f1ef81b0362cdb77bf37691bc1d2b03
      properties:
        commit_id:
          example: 94d8a2681f1ef81b0362cdb77bf37691bc1d2b03
          type: string
      required:
      - commit_id
      title: Create GitHub Source Artifact
      type: object
    RegistrySourceList:
      example:
        data:
        - aarch64: true
          x86_64: false
          updated_at: 2000-01-23T04:56:07.000+00:00
          repositories:
            data:
            - registry_url: us-central1-docker.pkg.dev/container-integration
              name: miru/django
              id: repo_123
              uri: us-central1-docker.pkg.dev/container-integration/miru/django
              object: repository
            - registry_url: us-central1-docker.pkg.dev/container-integration
              name: miru/django
              id: repo_123
              uri: us-central1-docker.pkg.dev/container-integration/miru/django
              object: repository
            object: list
          name: Ad Display V2.2.1
          created_at: 2000-01-23T04:56:07.000+00:00
          id: reg_src_1234
          object: registry_source
        - aarch64: true
          x86_64: false
          updated_at: 2000-01-23T04:56:07.000+00:00
          repositories:
            data:
            - registry_url: us-central1-docker.pkg.dev/container-integration
              name: miru/django
              id: repo_123
              uri: us-central1-docker.pkg.dev/container-integration/miru/django
              object: repository
            - registry_url: us-central1-docker.pkg.dev/container-integration
              name: miru/django
              id: repo_123
              uri: us-central1-docker.pkg.dev/container-integration/miru/django
              object: repository
            object: list
          name: Ad Display V2.2.1
          created_at: 2000-01-23T04:56:07.000+00:00
          id: reg_src_1234
          object: registry_source
        object: list
      properties:
        object:
          example: list
          type: string
        data:
          items:
            $ref: '#/components/schemas/RegistrySourceListItem'
          type: array
      required:
      - data
      - object
      title: Registry Source List
      type: object
    RegistrySourceListItem:
      example:
        aarch64: true
        x86_64: false
        updated_at: 2000-01-23T04:56:07.000+00:00
        repositories:
          data:
          - registry_url: us-central1-docker.pkg.dev/container-integration
            name: miru/django
            id: repo_123
            uri: us-central1-docker.pkg.dev/container-integration/miru/django
            object: repository
          - registry_url: us-central1-docker.pkg.dev/container-integration
            name: miru/django
            id: repo_123
            uri: us-central1-docker.pkg.dev/container-integration/miru/django
            object: repository
          object: list
        name: Ad Display V2.2.1
        created_at: 2000-01-23T04:56:07.000+00:00
        id: reg_src_1234
        object: registry_source
      properties:
        id:
          example: reg_src_1234
          type: string
        object:
          example: registry_source
          type: string
        name:
          example: Ad Display V2.2.1
          type: string
        repositories:
          $ref: '#/components/schemas/RepositoryList'
        aarch64:
          example: true
          type: boolean
        x86_64:
          example: false
          type: boolean
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
      - aarch64
      - created_at
      - id
      - name
      - object
      - repositories
      - updated_at
      - x86_64
      title: Registry Source List Item
      type: object
    CreateRegistrySource:
      example:
        aarch64: true
        x86_64: false
        extra_repositories:
        - docker.io/redis
        - us-central1-docker.pkg.dev/container-integration/miru/django
        name: Ad Display V2.2.1
        compose_file: |-
          name: miru
          services:
            redis:
            image: redis:latest
            restart: always
      properties:
        name:
          example: Ad Display V2.2.1
          type: string
        compose_file:
          example: |-
            name: miru
            services:
              redis:
              image: redis:latest
              restart: always
          type: string
        extra_repositories:
          example:
          - docker.io/redis
          - us-central1-docker.pkg.dev/container-integration/miru/django
          items:
            type: string
          type: array
        aarch64:
          example: true
          type: boolean
        x86_64:
          example: false
          type: boolean
      required:
      - aarch64
      - compose_file
      - extra_repositories
      - name
      - x86_64
      title: Create Registry Source
      type: object
    RegistrySource:
      allOf:
      - $ref: '#/components/schemas/RegistrySourceListItem'
      - properties:
          repositories:
            $ref: '#/components/schemas/RepositoryListWithIsExtra'
        required:
        - repositories
        type: object
      example:
        aarch64: true
        x86_64: false
        updated_at: 2000-01-23T04:56:07.000+00:00
        repositories:
          data:
          - is_extra: true
            registry_url: us-central1-docker.pkg.dev/container-integration
            name: miru/django
            id: repo_123
            uri: us-central1-docker.pkg.dev/container-integration/miru/django
            object: repository
          - is_extra: true
            registry_url: us-central1-docker.pkg.dev/container-integration
            name: miru/django
            id: repo_123
            uri: us-central1-docker.pkg.dev/container-integration/miru/django
            object: repository
          object: list
        name: Ad Display V2.2.1
        created_at: 2000-01-23T04:56:07.000+00:00
        id: reg_src_1234
        object: registry_source
      required:
      - repositories
      title: Registry Source
      type: object
    RepositoryListWithIsExtra:
      example:
        data:
        - is_extra: true
          registry_url: us-central1-docker.pkg.dev/container-integration
          name: miru/django
          id: repo_123
          uri: us-central1-docker.pkg.dev/container-integration/miru/django
          object: repository
        - is_extra: true
          registry_url: us-central1-docker.pkg.dev/container-integration
          name: miru/django
          id: repo_123
          uri: us-central1-docker.pkg.dev/container-integration/miru/django
          object: repository
        object: list
      properties:
        object:
          example: list
          type: string
        data:
          items:
            $ref: '#/components/schemas/RepositoryWithIsExtra'
          type: array
      required:
      - data
      - object
      title: Repository List With Is Extra (Registry Source)
      type: object
    RepositoryWithIsExtra:
      allOf:
      - $ref: '#/components/schemas/Repository'
      - properties:
          is_extra:
            example: true
            type: boolean
        type: object
      example:
        is_extra: true
        registry_url: us-central1-docker.pkg.dev/container-integration
        name: miru/django
        id: repo_123
        uri: us-central1-docker.pkg.dev/container-integration/miru/django
        object: repository
      required:
      - is_extra
      title: Repository With Is Extra (Registry Source)
      type: object
    UpdateRegistrySource:
      example:
        aarch64: true
        x86_64: false
        extra_repositories:
          data:
          - docker.io/redis
          - us-central1-docker.pkg.dev/container-integration/miru/django
        name: Ad Display V2.2.1
        compose_file: |-
          name: miru
          services:
            redis:
            image: redis:latest
            restart: always
      properties:
        name:
          example: Ad Display V2.2.1
          type: string
        compose_file:
          example: |-
            name: miru
            services:
              redis:
              image: redis:latest
              restart: always
          type: string
        extra_repositories:
          $ref: '#/components/schemas/UpdateRegistrySource_extra_repositories'
        aarch64:
          example: true
          type: boolean
        x86_64:
          example: false
          type: boolean
      required:
      - aarch64
      - compose_file
      - extra_repositories
      - name
      - x86_64
      title: Update Registry Source
      type: object
    ExternalRepositoryList:
      example:
        data:
        - registry_url: us-central1-docker.pkg.dev/container-integration
          name: miru/django
          uri: us-central1-docker.pkg.dev/container-integration/miru/django
          object: external_repository
        - registry_url: us-central1-docker.pkg.dev/container-integration
          name: miru/django
          uri: us-central1-docker.pkg.dev/container-integration/miru/django
          object: external_repository
        object: list
      properties:
        object:
          example: list
          type: string
        data:
          items:
            $ref: '#/components/schemas/ExternalRepository'
          type: array
      title: External Repository List
      type: object
    ExternalRepository:
      example:
        registry_url: us-central1-docker.pkg.dev/container-integration
        name: miru/django
        uri: us-central1-docker.pkg.dev/container-integration/miru/django
        object: external_repository
      properties:
        object:
          example: external_repository
          type: string
        registry_url:
          example: us-central1-docker.pkg.dev/container-integration
          type: string
        name:
          example: miru/django
          type: string
        uri:
          example: us-central1-docker.pkg.dev/container-integration/miru/django
          type: string
      required:
      - name
      - registry_url
      - uri
      title: External Repository
      type: object
    Repository:
      allOf:
      - $ref: '#/components/schemas/ExternalRepository'
      - properties:
          object:
            example: repository
            type: string
          id:
            example: repo_123
            type: string
        required:
        - id
        - object
        type: object
      example:
        registry_url: us-central1-docker.pkg.dev/container-integration
        name: miru/django
        id: repo_123
        uri: us-central1-docker.pkg.dev/container-integration/miru/django
        object: repository
      title: Repository
    ExternalImageList:
      example:
        data:
        - uploaded_at: 2021-01-01T00:00:00Z
          bytes: 392510987
          digest: sha256:123abc
          uri: docker.io/redis:latest
          object: external_image
          tags:
          - latest
          - v1.0.0
          - stable
        - uploaded_at: 2021-01-01T00:00:00Z
          bytes: 392510987
          digest: sha256:123abc
          uri: docker.io/redis:latest
          object: external_image
          tags:
          - latest
          - v1.0.0
          - stable
        object: list
      properties:
        object:
          example: list
          type: string
        data:
          items:
            $ref: '#/components/schemas/ExternalImage'
          type: array
      title: External Image List
      type: object
    ExternalImage:
      example:
        uploaded_at: 2021-01-01T00:00:00Z
        bytes: 392510987
        digest: sha256:123abc
        uri: docker.io/redis:latest
        object: external_image
        tags:
        - latest
        - v1.0.0
        - stable
      properties:
        object:
          example: external_image
          type: string
        digest:
          example: sha256:123abc
          type: string
        tags:
          example:
          - latest
          - v1.0.0
          - stable
          items:
            example: latest
            type: string
          type: array
        uri:
          example: docker.io/redis:latest
          type: string
        bytes:
          example: 392510987
          type: integer
        uploaded_at:
          example: 2021-01-01T00:00:00Z
          type: string
      required:
      - bytes
      - digest
      - tags
      - uploaded_at
      - uri
      title: External Image
      type: object
    RepositoryList:
      example:
        data:
        - registry_url: us-central1-docker.pkg.dev/container-integration
          name: miru/django
          id: repo_123
          uri: us-central1-docker.pkg.dev/container-integration/miru/django
          object: repository
        - registry_url: us-central1-docker.pkg.dev/container-integration
          name: miru/django
          id: repo_123
          uri: us-central1-docker.pkg.dev/container-integration/miru/django
          object: repository
        object: list
      properties:
        object:
          example: list
          type: string
        data:
          items:
            $ref: '#/components/schemas/Repository'
          type: array
      title: Repository List
      type: object
    CreateRegistrySourceArtifact_images_inner:
      example:
        repo_id: repo_1234
        tag: v1.3.4
      properties:
        repo_id:
          example: repo_1234
          type: string
        tag:
          example: v1.3.4
          type: string
      required:
      - repo_id
      - tag
      type: object
    UpdateRegistrySource_extra_repositories:
      example:
        data:
        - docker.io/redis
        - us-central1-docker.pkg.dev/container-integration/miru/django
      properties:
        data:
          example:
          - docker.io/redis
          - us-central1-docker.pkg.dev/container-integration/miru/django
          items:
            type: string
          type: array
      type: object
  securitySchemes:
    ClerkAuth:
      description: |
        Authentication is handled via Clerk session cookies. The '__session' cookie contains a signed JWT.
      in: cookie
      name: __session
      type: apiKey
