openapi: 3.0.3
info:
  title: Miru API
  version: 0.1.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: http://localhost/{version}
    description: localhost
    variables:
      version:
        default: v1
        enum:
          - v1
paths:
  /health:
    get:
      tags:
        - Agent
      summary: Health
      description: Retrieve the health of the agent.
      responses:
        '200':
          description: Successfully retrieved the health of the agent.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
  /version:
    get:
      tags:
        - Agent
      summary: Version
      description: Retrieve the version of the agent.
      responses:
        '200':
          description: Successfully retrieved the version of the agent.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
  /config_instances/deployed:
    get:
      x-hidden: true
      tags:
        - Config Instances
      summary: Retrieve the deployed config instance
      operationId: getDeployedConfigInstance
      parameters:
        - $ref: '#/components/parameters/config_schema_digest'
        - $ref: '#/components/parameters/config_type_slug'
      responses:
        '200':
          description: Successfully retrieved the config instance.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigInstance'
  /config_schemas/hash/serialized:
    post:
      x-hidden: true
      tags:
        - Config Schemas
      summary: Hash a serialized config schema
      operationId: hashConfigSchemaSerialized
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HashSchemaSerializedRequest'
      responses:
        '200':
          description: Successfully hashed the config schema.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaDigestResponse'
  /device:
    get:
      tags:
        - Devices
      summary: Get
      description: Retrieve the device.
      operationId: getDevice
      responses:
        '200':
          description: Successfully retrieved the device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
  /device/sync:
    post:
      tags:
        - Devices
      summary: Sync
      description: Manually force a device sync with the edits made in the dashboard.
      operationId: syncDevice
      responses:
        '200':
          description: Successfully synced the device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncDeviceResponse'
  /example-error:
    get:
      x-hidden: true
      tags:
        - Errors
      summary: Get an error
      operationId: getError
      responses:
        '200':
          description: Successfully retrieved the error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    HealthResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          description: The status of the agent.
          example: ok
    VersionResponse:
      type: object
      required:
        - version
        - commit
      properties:
        version:
          type: string
          description: The version of the agent.
          example: v0.1.0
        commit:
          type: string
          description: The commit hash of the agent.
          example: a1b2c3d4
    ConfigInstanceTargetStatus:
      type: string
      description: |
        Desired state of the config instance.
        - Created: config instance is created and can be deployed in the future
        - Deployed: config instance is available for consumption on the device
        - Removed: config instance is available for historical reference but cannot be deployed and is not active on the device
      enum:
        - created
        - deployed
        - removed
      x-enum-varnames:
        - CONFIG_INSTANCE_TARGET_STATUS_CREATED
        - CONFIG_INSTANCE_TARGET_STATUS_DEPLOYED
        - CONFIG_INSTANCE_TARGET_STATUS_REMOVED
    ConfigInstanceActivityStatus:
      type: string
      description: |
        Last known activity state of the config instance.
        - Created: config instance has been created and can be deployed in the future
        - Queued: config instance is waiting to be received by the device; will be deployed as soon as the device is online
        - Deployed: config instance is currently available for consumption on the device
        - Removed: the config instance is available for historical reference but cannot be deployed and is not active on the device
      enum:
        - created
        - queued
        - deployed
        - removed
      x-enum-varnames:
        - CONFIG_INSTANCE_ACTIVITY_STATUS_CREATED
        - CONFIG_INSTANCE_ACTIVITY_STATUS_QUEUED
        - CONFIG_INSTANCE_ACTIVITY_STATUS_DEPLOYED
        - CONFIG_INSTANCE_ACTIVITY_STATUS_REMOVED
    ConfigInstanceErrorStatus:
      type: string
      description: |
        Last known error state of the config instance deployment.
        - None: there are no errors with the config instance deployment
        - Retrying: an error has been encountered and the agent is attempting to try again to reach the target status
        - Failed: a fatal error has been encountered; the config instance is archived and (if deployed) removed from the device
      enum:
        - none
        - failed
        - retrying
      x-enum-varnames:
        - CONFIG_INSTANCE_ERROR_STATUS_NONE
        - CONFIG_INSTANCE_ERROR_STATUS_FAILED
        - CONFIG_INSTANCE_ERROR_STATUS_RETRYING
    ConfigInstanceStatus:
      type: string
      description: |
        This status merges the 'activity_status' and 'error_status' fields, with error states taking precedence over activity states when errors are present. For example, if the activity status is 'deployed' but the error status is 'failed', the status is 'failed'. However, if the error status is 'none' and the activity status is 'deployed', the status is 'deployed'.
      enum:
        - created
        - queued
        - deployed
        - removed
        - failed
        - retrying
      x-enum-varnames:
        - CONFIG_INSTANCE_STATUS_CREATED
        - CONFIG_INSTANCE_STATUS_QUEUED
        - CONFIG_INSTANCE_STATUS_DEPLOYED
        - CONFIG_INSTANCE_STATUS_REMOVED
        - CONFIG_INSTANCE_STATUS_FAILED
        - CONFIG_INSTANCE_STATUS_RETRYING
    BaseConfigInstance:
      title: Base Config Instance
      type: object
      required:
        - object
        - id
        - target_status
        - activity_status
        - error_status
        - status
        - relative_filepath
        - created_at
        - updated_at
        - device_id
        - config_schema_id
        - config_type_id
      properties:
        object:
          type: string
          enum:
            - config_instance
          example: config_instance
        id:
          type: string
          example: cfg_inst_123
          description: ID of the config instance.
        target_status:
          $ref: '#/components/schemas/ConfigInstanceTargetStatus'
        activity_status:
          $ref: '#/components/schemas/ConfigInstanceActivityStatus'
        error_status:
          $ref: '#/components/schemas/ConfigInstanceErrorStatus'
        status:
          $ref: '#/components/schemas/ConfigInstanceStatus'
        relative_filepath:
          type: string
          example: /v1/motion-control.json
          description: The file path to deploy the config instance relative to `/srv/miru/config_instances`. `v1/motion-control.json` would deploy to `/srv/miru/config_instances/v1/motion-control.json`.
        created_at:
          type: string
          format: date-time
          example: '2021-01-01T00:00:00Z'
          description: The timestamp of when the config instance was created.
        updated_at:
          type: string
          format: date-time
          example: '2021-01-01T00:00:00Z'
          description: The timestamp of when the config instance was last updated.
        device_id:
          type: string
          example: dvc_123
          description: ID of the device which the config instance is deployed to.
        config_schema_id:
          type: string
          example: cfg_sch_123
          description: ID of the config schema which the config instance must adhere to.
        config_type_id:
          type: string
          example: cfg_type_123
          description: ID of the config type which the config instance (and its schema) is a part of.
    ConfigInstance:
      allOf:
        - $ref: '#/components/schemas/BaseConfigInstance'
        - type: object
          required:
            - content
          properties:
            content:
              type: object
              description: The configuration values associated with the config instance
              example:
                enable_autonomy: true
                enable_remote_control: false
                max_payload_kg: 8.5
                preferred_speed_mode: normal
                emergency_stop_sensitivity: 0.9
                telemetry:
                  upload_interval_sec: 45
                  heartbeat_interval_sec: 15
    HashSerializedConfigSchemaFormat:
      type: string
      enum:
        - json
        - yaml
      x-enum-varnames:
        - HASH_SERIALIZED_CONFIG_SCHEMA_FORMAT_JSON
        - HASH_SERIALIZED_CONFIG_SCHEMA_FORMAT_YAML
    HashSchemaSerializedRequest:
      title: Hash Schema Serialized Request
      type: object
      required:
        - format
        - schema
      properties:
        format:
          $ref: '#/components/schemas/HashSerializedConfigSchemaFormat'
          example: json
        schema:
          type: string
          format: byte
          example: ewogICIkc2NoZW1hIjogImh0dHBzOi8vanNvbi1zY2hlbWEub3JnL2RyYWZ0LzIwMjAtMTIvc2NoZW1hIiwKICAidHlwZSI6ICJvYmplY3QiLAogICJwcm9wZXJ0aWVzIjogewogICAgImRldmljZV9pZCI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgfSwKICAgICJzcGVlZCI6IHsKICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICJtaW5pbXVtIjogMSwKICAgICAgImRlZmF1bHQiOiAxMAogICAgfQogIH0sCiAgInJlcXVpcmVkIjogWyJkZXZpY2VfaWQiLCAic3BlZWQiXQp9
    SchemaDigestResponse:
      title: Schema Digest Response
      type: object
      required:
        - digest
      properties:
        digest:
          type: string
          example: sha256:a1b2c3d4e5f6
    DeviceStatus:
      type: string
      description: |
        The status of the device.
        - Online: The miru agent is connected
        - Offline: The miru agent is disconnected (e.g. network issues, device is powered off, etc.)
      enum:
        - online
        - offline
      x-enum-varnames:
        - DEVICE_STATUS_ONLINE
        - DEVICE_STATUS_OFFLINE
    Device:
      title: Device
      type: object
      required:
        - object
        - id
        - name
        - status
        - last_synced_at
        - last_connected_at
        - last_disconnected_at
      properties:
        object:
          type: string
          enum:
            - device
          example: device
        id:
          type: string
          example: dvc_123
          description: ID of the device.
        name:
          type: string
          example: My Device
          description: Name of the device.
        status:
          $ref: '#/components/schemas/DeviceStatus'
        last_synced_at:
          type: string
          format: date-time
          example: '2021-01-01T00:00:00Z'
          description: Timestamp of when the device was last synced.
        last_connected_at:
          type: string
          format: date-time
          example: '2021-01-01T00:00:00Z'
          description: Timestamp of the last successful connection event with the backend.
        last_disconnected_at:
          type: string
          format: date-time
          example: '2021-01-01T00:00:00Z'
          description: Timestamp of the last successful disconnection event with the backend.
    SyncDeviceResult:
      type: string
      description: The result of attempting to sync the device.
      enum:
        - success
        - network_connection_error
        - in_cooldown
      x-enum-varnames:
        - SYNC_DEVICE_RESULT_SUCCESS
        - SYNC_DEVICE_RESULT_NETWORK_CONNECTION_ERROR
        - SYNC_DEVICE_RESULT_IN_COOLDOWN
    SyncDeviceResponse:
      title: Sync Device Response
      type: object
      required:
        - code
        - message
        - last_synced_at
        - last_attempted_sync_at
        - in_cooldown
        - cooldown_ends_at
      properties:
        code:
          $ref: '#/components/schemas/SyncDeviceResult'
        message:
          type: string
          example: Device is not connected to the backend.
          description: The message of the result.
        last_synced_at:
          type: string
          format: date-time
          example: '2021-01-01T00:00:00Z'
          description: Timestamp of when the device was last synced.
        last_attempted_sync_at:
          type: string
          format: date-time
          example: '2021-01-01T00:00:00Z'
          description: Timestamp of when the last *attempted* sync occurred.
        in_cooldown:
          type: boolean
          example: true
          description: Whether the device is currently in cooldown.
        cooldown_ends_at:
          type: string
          format: date-time
          example: '2021-01-01T00:00:00Z'
          description: Timestamp of when the cooldown will end.
    Error:
      type: object
      required:
        - code
        - params
        - message
        - debug_message
      properties:
        code:
          type: string
          example: invalid_request
        params:
          example:
            param1: value1
            param2: value2
        message:
          type: string
          example: This is a message for a user
        debug_message:
          type: string
          example: This is a message for a developer
    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          $ref: '#/components/schemas/Error'
  parameters:
    config_schema_digest:
      name: config_schema_digest
      in: query
      required: true
      description: The digest of the config schema.
      schema:
        type: string
        example: sha256:1234567890abcdef
    config_type_slug:
      name: config_type_slug
      in: query
      required: true
      description: The slug of the config type.
      schema:
        type: string
